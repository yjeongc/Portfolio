{
    "Classes": [
        {
            "name": "moe/shizuku/api/BinderContainer",
            "properties": [
                {
                    "name": "CREATOR"
                },
                {
                    "name": "binder"
                }
            ],
            "method": [
                {
                    "name": "<init>"
                },
                {
                    "name": "<clinit>"
                },
                {
                    "name": "<init>"
                },
                {
                    "name": "writeToParcel"
                }
            ]
        },
        {
            "name": "moe/shizuku/api/BuildConfig",
            "properties": [],
            "method": [
                {
                    "name": "<init>"
                }
            ]
        },
        {
            "name": "moe/shizuku/api/R",
            "properties": [],
            "method": [
                {
                    "name": "<init>"
                }
            ]
        },
        {
            "name": "moe/shizuku/api/RemoteProcess",
            "properties": [
                {
                    "name": "CREATOR"
                },
                {
                    "name": "mRemote"
                }
            ],
            "method": [
                {
                    "name": "<init>"
                },
                {
                    "name": "<clinit>"
                },
                {
                    "name": "<init>"
                },
                {
                    "name": "<init>"
                },
                {
                    "name": "alive"
                },
                {
                    "name": "asBinder"
                },
                {
                    "name": "destroy"
                },
                {
                    "name": "exitValue"
                },
                {
                    "name": "getErrorStream"
                },
                {
                    "name": "getInputStream"
                },
                {
                    "name": "getOutputStream"
                },
                {
                    "name": "waitFor"
                },
                {
                    "name": "waitForTimeout"
                },
                {
                    "name": "writeToParcel"
                },
                {
                    "name": "destroyForcibly"
                }
            ]
        },
        {
            "name": "moe/shizuku/api/ShizukuApiConstants",
            "properties": [],
            "method": [
                {
                    "name": "<init>"
                }
            ]
        },
        {
            "name": "moe/shizuku/api/ShizukuBinderReceiveProvider",
            "properties": [
                {
                    "name": "sIsProviderProcess"
                },
                {
                    "name": "binder"
                }
            ],
            "method": [
                {
                    "name": "<init>"
                },
                {
                    "name": "attachInfo"
                },
                {
                    "name": "call"
                },
                {
                    "name": "getContext"
                },
                {
                    "name": "isProviderProcess"
                },
                {
                    "name": "setIsProviderProcess"
                }
            ]
        },
        {
            "name": "moe/shizuku/api/ShizukuBinderWrapper",
            "properties": [
                {
                    "name": "original"
                }
            ],
            "method": [
                {
                    "name": "<init>"
                },
                {
                    "name": "dump"
                },
                {
                    "name": "dumpAsync"
                },
                {
                    "name": "getInterfaceDescriptor"
                },
                {
                    "name": "isBinderAlive"
                },
                {
                    "name": "linkToDeath"
                },
                {
                    "name": "pingBinder"
                },
                {
                    "name": "transact"
                },
                {
                    "name": "unlinkToDeath"
                }
            ]
        },
        {
            "name": "moe/shizuku/api/ShizukuClientHelper",
            "properties": [
                {
                    "name": "sBinderReceivedListener"
                },
                {
                    "name": "sToken"
                }
            ],
            "method": [
                {
                    "name": "getBinderReceivedListener"
                },
                {
                    "name": "<init>"
                },
                {
                    "name": "createPre23AuthorizationIntent"
                },
                {
                    "name": "getManagerVersionCode"
                },
                {
                    "name": "isManagerV2Installed"
                },
                {
                    "name": "isManagerV3Installed"
                },
                {
                    "name": "loadPre23Token"
                },
                {
                    "name": "savePre23Token"
                },
                {
                    "name": "setPre23Token"
                },
                {
                    "name": "setPre23Token"
                },
                {
                    "name": "isPreM"
                }
            ]
        },
        {
            "name": "moe/shizuku/api/ShizukuMultiProcessHelper",
            "properties": [
                {
                    "name": "sReceiver"
                },
                {
                    "name": "binder"
                }
            ],
            "method": [
                {
                    "name": "<init>"
                },
                {
                    "name": "initialize"
                },
                {
                    "name": "initialize"
                },
                {
                    "name": "requestBinder"
                }
            ]
        },
        {
            "name": "moe/shizuku/api/ShizukuService",
            "properties": [
                {
                    "name": "sService"
                }
            ],
            "method": [
                {
                    "name": "getBinder"
                },
                {
                    "name": "pingBinder"
                },
                {
                    "name": "setBinder"
                },
                {
                    "name": "transactRemote"
                },
                {
                    "name": "<init>"
                },
                {
                    "name": "checkPermission"
                },
                {
                    "name": "requireService"
                },
                {
                    "name": "getService"
                },
                {
                    "name": "getUid"
                },
                {
                    "name": "getVersion"
                },
                {
                    "name": "newProcess"
                },
                {
                    "name": "setCurrentProcessTokenPre23"
                }
            ]
        },
        {
            "name": "moe/shizuku/api/SystemServiceHelper",
            "properties": [
                {
                    "name": "systemServiceCache"
                },
                {
                    "name": "transactCodeCache"
                }
            ],
            "method": [
                {
                    "name": "<clinit>"
                },
                {
                    "name": "<init>"
                },
                {
                    "name": "getSystemService"
                },
                {
                    "name": "getTransactionCode"
                },
                {
                    "name": "obtainParcel"
                },
                {
                    "name": "obtainParcel"
                }
            ]
        },
        {
            "name": "moe/shizuku/server/IRemoteProcess",
            "properties": [],
            "method": [
                {
                    "name": "alive"
                },
                {
                    "name": "asBinder"
                },
                {
                    "name": "destroy"
                },
                {
                    "name": "exitValue"
                },
                {
                    "name": "getErrorStream"
                },
                {
                    "name": "getInputStream"
                },
                {
                    "name": "getOutputStream"
                },
                {
                    "name": "waitFor"
                },
                {
                    "name": "waitForTimeout"
                }
            ]
        },
        {
            "name": "moe/shizuku/server/IShizukuService",
            "properties": [],
            "method": [
                {
                    "name": "checkPermission"
                },
                {
                    "name": "asBinder"
                },
                {
                    "name": "getUid"
                },
                {
                    "name": "getVersion"
                },
                {
                    "name": "newProcess"
                },
                {
                    "name": "setPidToken"
                }
            ]
        },
        {
            "name": "java/lang/Object",
            "properties": [],
            "method": [
                {
                    "name": "<init>"
                },
                {
                    "name": "getClass"
                },
                {
                    "name": "toString"
                },
                {
                    "name": "equals"
                },
                {
                    "name": "hashCode"
                },
                {
                    "name": "clone"
                },
                {
                    "name": "wait"
                },
                {
                    "name": "notifyAll"
                },
                {
                    "name": "wait"
                },
                {
                    "name": "finalize"
                },
                {
                    "name": "notify"
                }
            ]
        },
        {
            "name": "java/util/concurrent/CopyOnWriteArrayList",
            "properties": [],
            "method": [
                {
                    "name": "<init>"
                },
                {
                    "name": "add"
                },
                {
                    "name": "iterator"
                },
                {
                    "name": "remove"
                },
                {
                    "name": "isEmpty"
                },
                {
                    "name": "clear"
                },
                {
                    "name": "size"
                },
                {
                    "name": "get"
                },
                {
                    "name": "remove"
                },
                {
                    "name": "<init>"
                }
            ]
        },
        {
            "name": "java/util/Iterator",
            "properties": [],
            "method": [
                {
                    "name": "hasNext"
                },
                {
                    "name": "next"
                },
                {
                    "name": "remove"
                }
            ]
        },
        {
            "name": "java/util/ArrayDeque",
            "properties": [],
            "method": [
                {
                    "name": "<init>"
                },
                {
                    "name": "add"
                },
                {
                    "name": "descendingIterator"
                },
                {
                    "name": "size"
                },
                {
                    "name": "isEmpty"
                },
                {
                    "name": "peek"
                },
                {
                    "name": "remove"
                },
                {
                    "name": "clear"
                },
                {
                    "name": "removeFirst"
                },
                {
                    "name": "addLast"
                },
                {
                    "name": "<init>"
                },
                {
                    "name": "remove"
                },
                {
                    "name": "push"
                },
                {
                    "name": "pop"
                }
            ]
        },
        {
            "name": "java/lang/Runnable",
            "properties": [],
            "method": [
                {
                    "name": "run"
                }
            ]
        },
        {
            "name": "java/lang/Enum",
            "properties": [],
            "method": [
                {
                    "name": "<init>"
                },
                {
                    "name": "valueOf"
                },
                {
                    "name": "ordinal"
                }
            ]
        },
        {
            "name": "java/lang/UnsupportedOperationException",
            "properties": [],
            "method": [
                {
                    "name": "<init>"
                },
                {
                    "name": "<init>"
                }
            ]
        },
        {
            "name": "java/lang/Class",
            "properties": [],
            "method": [
                {
                    "name": "getDeclaredMethod"
                },
                {
                    "name": "getMethod"
                },
                {
                    "name": "forName"
                },
                {
                    "name": "asSubclass"
                },
                {
                    "name": "getConstructor"
                },
                {
                    "name": "getName"
                },
                {
                    "name": "getDeclaredField"
                },
                {
                    "name": "forName"
                },
                {
                    "name": "getSimpleName"
                },
                {
                    "name": "getFields"
                },
                {
                    "name": "getComponentType"
                },
                {
                    "name": "getDeclaredConstructor"
                },
                {
                    "name": "isAssignableFrom"
                },
                {
                    "name": "getClassLoader"
                },
                {
                    "name": "isInstance"
                },
                {
                    "name": "getModifiers"
                },
                {
                    "name": "isAnonymousClass"
                },
                {
                    "name": "isMemberClass"
                },
                {
                    "name": "getCanonicalName"
                },
                {
                    "name": "getSuperclass"
                },
                {
                    "name": "getInterfaces"
                },
                {
                    "name": "getDeclaredMethods"
                },
                {
                    "name": "getPackage"
                },
                {
                    "name": "getAnnotation"
                },
                {
                    "name": "toString"
                },
                {
                    "name": "getResourceAsStream"
                },
                {
                    "name": "cast"
                },
                {
                    "name": "newInstance"
                },
                {
                    "name": "getField"
                },
                {
                    "name": "getDeclaredFields"
                },
                {
                    "name": "isInterface"
                }
            ]
        },
        {
            "name": "java/lang/Integer",
            "properties": [],
            "method": [
                {
                    "name": "valueOf"
                },
                {
                    "name": "intValue"
                },
                {
                    "name": "bitCount"
                },
                {
                    "name": "highestOneBit"
                },
                {
                    "name": "numberOfTrailingZeros"
                },
                {
                    "name": "toString"
                },
                {
                    "name": "toHexString"
                },
                {
                    "name": "parseInt"
                },
                {
                    "name": "toBinaryString"
                },
                {
                    "name": "shortValue"
                },
                {
                    "name": "parseInt"
                },
                {
                    "name": "compare"
                },
                {
                    "name": "compareTo"
                },
                {
                    "name": "signum"
                }
            ]
        },
        {
            "name": "java/lang/reflect/Method",
            "properties": [],
            "method": [
                {
                    "name": "invoke"
                },
                {
                    "name": "getReturnType"
                },
                {
                    "name": "setAccessible"
                },
                {
                    "name": "isAccessible"
                },
                {
                    "name": "getName"
                },
                {
                    "name": "getAnnotation"
                },
                {
                    "name": "getParameterTypes"
                },
                {
                    "name": "isAnnotationPresent"
                },
                {
                    "name": "getModifiers"
                }
            ]
        },
        {
            "name": "java/lang/ref/WeakReference",
            "properties": [],
            "method": [
                {
                    "name": "<init>"
                },
                {
                    "name": "get"
                },
                {
                    "name": "<init>"
                },
                {
                    "name": "clear"
                }
            ]
        },
        {
            "name": "java/lang/IllegalArgumentException",
            "properties": [],
            "method": [
                {
                    "name": "<init>"
                },
                {
                    "name": "<init>"
                },
                {
                    "name": "<init>"
                },
                {
                    "name": "<init>"
                }
            ]
        },
        {
            "name": "java/lang/Throwable",
            "properties": [],
            "method": [
                {
                    "name": "getMessage"
                },
                {
                    "name": "getCause"
                },
                {
                    "name": "initCause"
                },
                {
                    "name": "getStackTrace"
                },
                {
                    "name": "setStackTrace"
                },
                {
                    "name": "addSuppressed"
                },
                {
                    "name": "printStackTrace"
                },
                {
                    "name": "getLocalizedMessage"
                },
                {
                    "name": "printStackTrace"
                },
                {
                    "name": "<init>"
                },
                {
                    "name": "toString"
                }
            ]
        },
        {
            "name": "java/lang/String",
            "properties": [],
            "method": [
                {
                    "name": "contains"
                },
                {
                    "name": "equals"
                },
                {
                    "name": "indexOf"
                },
                {
                    "name": "hashCode"
                },
                {
                    "name": "toUpperCase"
                },
                {
                    "name": "charAt"
                },
                {
                    "name": "valueOf"
                },
                {
                    "name": "valueOf"
                },
                {
                    "name": "endsWith"
                },
                {
                    "name": "substring"
                },
                {
                    "name": "format"
                },
                {
                    "name": "format"
                },
                {
                    "name": "startsWith"
                },
                {
                    "name": "split"
                },
                {
                    "name": "substring"
                },
                {
                    "name": "isEmpty"
                },
                {
                    "name": "lastIndexOf"
                },
                {
                    "name": "split"
                },
                {
                    "name": "toLowerCase"
                },
                {
                    "name": "length"
                },
                {
                    "name": "codePointCount"
                },
                {
                    "name": "codePointAt"
                },
                {
                    "name": "trim"
                },
                {
                    "name": "equalsIgnoreCase"
                },
                {
                    "name": "toLowerCase"
                },
                {
                    "name": "indexOf"
                },
                {
                    "name": "regionMatches"
                },
                {
                    "name": "valueOf"
                },
                {
                    "name": "<init>"
                },
                {
                    "name": "replace"
                },
                {
                    "name": "compareToIgnoreCase"
                },
                {
                    "name": "getBytes"
                },
                {
                    "name": "<init>"
                },
                {
                    "name": "getBytes"
                },
                {
                    "name": "valueOf"
                },
                {
                    "name": "<init>"
                },
                {
                    "name": "replace"
                },
                {
                    "name": "replaceAll"
                },
                {
                    "name": "lastIndexOf"
                },
                {
                    "name": "indexOf"
                },
                {
                    "name": "<init>"
                },
                {
                    "name": "getBytes"
                },
                {
                    "name": "toCharArray"
                },
                {
                    "name": "<init>"
                },
                {
                    "name": "subSequence"
                },
                {
                    "name": "compareTo"
                },
                {
                    "name": "<init>"
                },
                {
                    "name": "concat"
                },
                {
                    "name": "<init>"
                },
                {
                    "name": "getChars"
                },
                {
                    "name": "<init>"
                },
                {
                    "name": "replaceFirst"
                },
                {
                    "name": "matches"
                },
                {
                    "name": "contentEquals"
                },
                {
                    "name": "offsetByCodePoints"
                }
            ]
        },
        {
            "name": "java/lang/StringBuilder",
            "properties": [],
            "method": [
                {
                    "name": "<init>"
                },
                {
                    "name": "append"
                },
                {
                    "name": "toString"
                },
                {
                    "name": "append"
                },
                {
                    "name": "append"
                },
                {
                    "name": "append"
                },
                {
                    "name": "append"
                },
                {
                    "name": "append"
                },
                {
                    "name": "append"
                },
                {
                    "name": "<init>"
                },
                {
                    "name": "length"
                },
                {
                    "name": "append"
                },
                {
                    "name": "<init>"
                },
                {
                    "name": "append"
                },
                {
                    "name": "delete"
                },
                {
                    "name": "append"
                },
                {
                    "name": "setLength"
                },
                {
                    "name": "replace"
                }
            ]
        },
        {
            "name": "java/lang/IllegalStateException",
            "properties": [],
            "method": [
                {
                    "name": "<init>"
                },
                {
                    "name": "<init>"
                },
                {
                    "name": "<init>"
                },
                {
                    "name": "<init>"
                }
            ]
        },
        {
            "name": "java/util/Map",
            "properties": [],
            "method": [
                {
                    "name": "get"
                },
                {
                    "name": "put"
                },
                {
                    "name": "clear"
                },
                {
                    "name": "keySet"
                },
                {
                    "name": "containsKey"
                },
                {
                    "name": "size"
                },
                {
                    "name": "remove"
                },
                {
                    "name": "values"
                },
                {
                    "name": "entrySet"
                },
                {
                    "name": "isEmpty"
                },
                {
                    "name": "putAll"
                },
                {
                    "name": "equals"
                },
                {
                    "name": "hashCode"
                }
            ]
        },
        {
            "name": "java/lang/reflect/Constructor",
            "properties": [],
            "method": [
                {
                    "name": "setAccessible"
                },
                {
                    "name": "newInstance"
                },
                {
                    "name": "isAccessible"
                }
            ]
        },
        {
            "name": "java/lang/reflect/Field",
            "properties": [],
            "method": [
                {
                    "name": "setAccessible"
                },
                {
                    "name": "get"
                },
                {
                    "name": "getName"
                },
                {
                    "name": "getInt"
                },
                {
                    "name": "getBoolean"
                },
                {
                    "name": "set"
                },
                {
                    "name": "getType"
                },
                {
                    "name": "setBoolean"
                },
                {
                    "name": "setInt"
                },
                {
                    "name": "isSynthetic"
                },
                {
                    "name": "isAccessible"
                }
            ]
        },
        {
            "name": "java/lang/Math",
            "properties": [],
            "method": [
                {
                    "name": "sin"
                },
                {
                    "name": "round"
                },
                {
                    "name": "asin"
                },
                {
                    "name": "cos"
                },
                {
                    "name": "acos"
                },
                {
                    "name": "toRadians"
                },
                {
                    "name": "round"
                },
                {
                    "name": "sqrt"
                },
                {
                    "name": "min"
                },
                {
                    "name": "max"
                },
                {
                    "name": "floor"
                },
                {
                    "name": "max"
                },
                {
                    "name": "ceil"
                },
                {
                    "name": "abs"
                },
                {
                    "name": "abs"
                },
                {
                    "name": "min"
                },
                {
                    "name": "min"
                },
                {
                    "name": "pow"
                },
                {
                    "name": "max"
                },
                {
                    "name": "abs"
                },
                {
                    "name": "tan"
                },
                {
                    "name": "atan2"
                },
                {
                    "name": "max"
                },
                {
                    "name": "signum"
                },
                {
                    "name": "min"
                },
                {
                    "name": "toDegrees"
                },
                {
                    "name": "hypot"
                },
                {
                    "name": "random"
                },
                {
                    "name": "abs"
                },
                {
                    "name": "ulp"
                },
                {
                    "name": "log1p"
                },
                {
                    "name": "atan"
                }
            ]
        },
        {
            "name": "java/lang/System",
            "properties": [],
            "method": [
                {
                    "name": "currentTimeMillis"
                },
                {
                    "name": "arraycopy"
                },
                {
                    "name": "identityHashCode"
                },
                {
                    "name": "exit"
                },
                {
                    "name": "getProperty"
                },
                {
                    "name": "gc"
                },
                {
                    "name": "nanoTime"
                },
                {
                    "name": "setProperty"
                },
                {
                    "name": "clearProperty"
                }
            ]
        },
        {
            "name": "java/util/Calendar",
            "properties": [],
            "method": [
                {
                    "name": "getInstance"
                },
                {
                    "name": "get"
                },
                {
                    "name": "setTimeInMillis"
                },
                {
                    "name": "getMaximum"
                },
                {
                    "name": "getFirstDayOfWeek"
                },
                {
                    "name": "set"
                },
                {
                    "name": "getDisplayName"
                },
                {
                    "name": "getActualMaximum"
                },
                {
                    "name": "getTime"
                },
                {
                    "name": "getTimeInMillis"
                },
                {
                    "name": "compareTo"
                },
                {
                    "name": "add"
                },
                {
                    "name": "getInstance"
                },
                {
                    "name": "clear"
                },
                {
                    "name": "set"
                }
            ]
        },
        {
            "name": "java/lang/ThreadLocal",
            "properties": [],
            "method": [
                {
                    "name": "<init>"
                },
                {
                    "name": "get"
                },
                {
                    "name": "set"
                }
            ]
        },
        {
            "name": "java/util/WeakHashMap",
            "properties": [],
            "method": [
                {
                    "name": "<init>"
                },
                {
                    "name": "get"
                },
                {
                    "name": "put"
                },
                {
                    "name": "<init>"
                },
                {
                    "name": "isEmpty"
                },
                {
                    "name": "keySet"
                },
                {
                    "name": "entrySet"
                },
                {
                    "name": "remove"
                },
                {
                    "name": "containsKey"
                },
                {
                    "name": "clear"
                }
            ]
        },
        {
            "name": "java/lang/CharSequence",
            "properties": [],
            "method": [
                {
                    "name": "toString"
                },
                {
                    "name": "length"
                },
                {
                    "name": "subSequence"
                },
                {
                    "name": "charAt"
                }
            ]
        },
        {
            "name": "java/lang/Boolean",
            "properties": [],
            "method": [
                {
                    "name": "booleanValue"
                },
                {
                    "name": "valueOf"
                },
                {
                    "name": "parseBoolean"
                },
                {
                    "name": "toString"
                },
                {
                    "name": "getBoolean"
                },
                {
                    "name": "compareTo"
                },
                {
                    "name": "hashCode"
                },
                {
                    "name": "equals"
                }
            ]
        },
        {
            "name": "java/lang/RuntimeException",
            "properties": [],
            "method": [
                {
                    "name": "<init>"
                },
                {
                    "name": "<init>"
                },
                {
                    "name": "getMessage"
                },
                {
                    "name": "<init>"
                },
                {
                    "name": "toString"
                },
                {
                    "name": "<init>"
                },
                {
                    "name": "getCause"
                },
                {
                    "name": "getLocalizedMessage"
                }
            ]
        },
        {
            "name": "org/xmlpull/v1/XmlPullParser",
            "properties": [],
            "method": [
                {
                    "name": "getEventType"
                },
                {
                    "name": "getName"
                },
                {
                    "name": "next"
                },
                {
                    "name": "setInput"
                },
                {
                    "name": "getAttributeValue"
                },
                {
                    "name": "getPositionDescription"
                },
                {
                    "name": "getDepth"
                },
                {
                    "name": "require"
                },
                {
                    "name": "isEmptyElementTag"
                }
            ]
        },
        {
            "name": "java/util/ArrayList",
            "properties": [],
            "method": [
                {
                    "name": "<init>"
                },
                {
                    "name": "iterator"
                },
                {
                    "name": "add"
                },
                {
                    "name": "size"
                },
                {
                    "name": "get"
                },
                {
                    "name": "<init>"
                },
                {
                    "name": "remove"
                },
                {
                    "name": "contains"
                },
                {
                    "name": "clear"
                },
                {
                    "name": "remove"
                },
                {
                    "name": "<init>"
                },
                {
                    "name": "toArray"
                },
                {
                    "name": "isEmpty"
                },
                {
                    "name": "add"
                },
                {
                    "name": "lastIndexOf"
                },
                {
                    "name": "indexOf"
                },
                {
                    "name": "addAll"
                },
                {
                    "name": "removeAll"
                },
                {
                    "name": "ensureCapacity"
                },
                {
                    "name": "clone"
                },
                {
                    "name": "set"
                },
                {
                    "name": "toArray"
                },
                {
                    "name": "subList"
                },
                {
                    "name": "containsAll"
                }
            ]
        },
        {
            "name": "java/util/Set",
            "properties": [],
            "method": [
                {
                    "name": "iterator"
                },
                {
                    "name": "size"
                },
                {
                    "name": "contains"
                },
                {
                    "name": "containsAll"
                },
                {
                    "name": "add"
                },
                {
                    "name": "isEmpty"
                },
                {
                    "name": "equals"
                },
                {
                    "name": "remove"
                },
                {
                    "name": "clear"
                },
                {
                    "name": "addAll"
                },
                {
                    "name": "toArray"
                },
                {
                    "name": "toArray"
                },
                {
                    "name": "hashCode"
                },
                {
                    "name": "removeAll"
                }
            ]
        },
        {
            "name": "java/util/List",
            "properties": [],
            "method": [
                {
                    "name": "size"
                },
                {
                    "name": "get"
                },
                {
                    "name": "iterator"
                },
                {
                    "name": "remove"
                },
                {
                    "name": "add"
                },
                {
                    "name": "clear"
                },
                {
                    "name": "isEmpty"
                },
                {
                    "name": "toArray"
                },
                {
                    "name": "remove"
                },
                {
                    "name": "addAll"
                },
                {
                    "name": "contains"
                },
                {
                    "name": "add"
                },
                {
                    "name": "set"
                },
                {
                    "name": "toArray"
                },
                {
                    "name": "subList"
                },
                {
                    "name": "containsAll"
                },
                {
                    "name": "indexOf"
                },
                {
                    "name": "addAll"
                },
                {
                    "name": "equals"
                }
            ]
        },
        {
            "name": "java/lang/Float",
            "properties": [],
            "method": [
                {
                    "name": "floatToIntBits"
                },
                {
                    "name": "parseFloat"
                },
                {
                    "name": "valueOf"
                },
                {
                    "name": "floatValue"
                },
                {
                    "name": "compare"
                },
                {
                    "name": "floatToRawIntBits"
                },
                {
                    "name": "toString"
                },
                {
                    "name": "isNaN"
                },
                {
                    "name": "intBitsToFloat"
                },
                {
                    "name": "intValue"
                },
                {
                    "name": "doubleValue"
                }
            ]
        },
        {
            "name": "java/math/BigDecimal",
            "properties": [],
            "method": [
                {
                    "name": "<init>"
                },
                {
                    "name": "<init>"
                },
                {
                    "name": "divide"
                },
                {
                    "name": "doubleValue"
                },
                {
                    "name": "<init>"
                },
                {
                    "name": "unscaledValue"
                },
                {
                    "name": "scale"
                },
                {
                    "name": "<init>"
                },
                {
                    "name": "compareTo"
                },
                {
                    "name": "<init>"
                },
                {
                    "name": "multiply"
                },
                {
                    "name": "subtract"
                },
                {
                    "name": "add"
                },
                {
                    "name": "valueOf"
                },
                {
                    "name": "longValue"
                }
            ]
        },
        {
            "name": "org/xmlpull/v1/XmlSerializer",
            "properties": [],
            "method": [
                {
                    "name": "setOutput"
                },
                {
                    "name": "startDocument"
                },
                {
                    "name": "startTag"
                },
                {
                    "name": "attribute"
                },
                {
                    "name": "endTag"
                },
                {
                    "name": "endDocument"
                }
            ]
        },
        {
            "name": "java/io/FileOutputStream",
            "properties": [],
            "method": [
                {
                    "name": "close"
                },
                {
                    "name": "<init>"
                },
                {
                    "name": "write"
                },
                {
                    "name": "getFD"
                },
                {
                    "name": "<init>"
                },
                {
                    "name": "<init>"
                },
                {
                    "name": "flush"
                },
                {
                    "name": "write"
                }
            ]
        },
        {
            "name": "java/util/HashMap",
            "properties": [],
            "method": [
                {
                    "name": "<init>"
                },
                {
                    "name": "get"
                },
                {
                    "name": "put"
                },
                {
                    "name": "containsKey"
                },
                {
                    "name": "values"
                },
                {
                    "name": "clear"
                },
                {
                    "name": "keySet"
                },
                {
                    "name": "remove"
                },
                {
                    "name": "<init>"
                },
                {
                    "name": "size"
                },
                {
                    "name": "<init>"
                },
                {
                    "name": "<init>"
                },
                {
                    "name": "isEmpty"
                },
                {
                    "name": "putAll"
                },
                {
                    "name": "entrySet"
                },
                {
                    "name": "equals"
                },
                {
                    "name": "hashCode"
                }
            ]
        },
        {
            "name": "java/io/FileInputStream",
            "properties": [],
            "method": [
                {
                    "name": "close"
                },
                {
                    "name": "<init>"
                },
                {
                    "name": "getChannel"
                },
                {
                    "name": "<init>"
                },
                {
                    "name": "available"
                },
                {
                    "name": "read"
                },
                {
                    "name": "read"
                },
                {
                    "name": "<init>"
                }
            ]
        },
        {
            "name": "java/lang/Long",
            "properties": [],
            "method": [
                {
                    "name": "parseLong"
                },
                {
                    "name": "valueOf"
                },
                {
                    "name": "bitCount"
                },
                {
                    "name": "rotateRight"
                },
                {
                    "name": "toBinaryString"
                },
                {
                    "name": "compare"
                },
                {
                    "name": "longValue"
                },
                {
                    "name": "valueOf"
                },
                {
                    "name": "toString"
                },
                {
                    "name": "parseLong"
                },
                {
                    "name": "valueOf"
                }
            ]
        },
        {
            "name": "org/xmlpull/v1/XmlPullParserException",
            "properties": [],
            "method": [
                {
                    "name": "<init>"
                },
                {
                    "name": "initCause"
                },
                {
                    "name": "getMessage"
                }
            ]
        },
        {
            "name": "java/util/Collections",
            "properties": [],
            "method": [
                {
                    "name": "unmodifiableList"
                },
                {
                    "name": "binarySearch"
                },
                {
                    "name": "emptyList"
                },
                {
                    "name": "sort"
                },
                {
                    "name": "unmodifiableMap"
                },
                {
                    "name": "singletonList"
                },
                {
                    "name": "sort"
                },
                {
                    "name": "unmodifiableSet"
                },
                {
                    "name": "emptySet"
                },
                {
                    "name": "newSetFromMap"
                },
                {
                    "name": "singletonMap"
                },
                {
                    "name": "reverseOrder"
                },
                {
                    "name": "addAll"
                },
                {
                    "name": "emptyMap"
                },
                {
                    "name": "synchronizedMap"
                },
                {
                    "name": "synchronizedSet"
                },
                {
                    "name": "singleton"
                },
                {
                    "name": "synchronizedList"
                },
                {
                    "name": "unmodifiableCollection"
                },
                {
                    "name": "reverse"
                }
            ]
        },
        {
            "name": "java/util/Locale",
            "properties": [],
            "method": [
                {
                    "name": "forLanguageTag"
                },
                {
                    "name": "<init>"
                },
                {
                    "name": "<init>"
                },
                {
                    "name": "<init>"
                },
                {
                    "name": "getDefault"
                },
                {
                    "name": "toLanguageTag"
                },
                {
                    "name": "toString"
                },
                {
                    "name": "getScript"
                },
                {
                    "name": "equals"
                },
                {
                    "name": "getDisplayName"
                },
                {
                    "name": "clone"
                },
                {
                    "name": "getLanguage"
                },
                {
                    "name": "getCountry"
                },
                {
                    "name": "hashCode"
                }
            ]
        },
        {
            "name": "java/util/concurrent/ConcurrentHashMap",
            "properties": [],
            "method": [
                {
                    "name": "<init>"
                },
                {
                    "name": "get"
                },
                {
                    "name": "put"
                },
                {
                    "name": "<init>"
                },
                {
                    "name": "containsKey"
                },
                {
                    "name": "remove"
                },
                {
                    "name": "putIfAbsent"
                },
                {
                    "name": "size"
                },
                {
                    "name": "isEmpty"
                }
            ]
        },
        {
            "name": "java/util/Arrays",
            "properties": [],
            "method": [
                {
                    "name": "sort"
                },
                {
                    "name": "copyOf"
                },
                {
                    "name": "toString"
                },
                {
                    "name": "asList"
                },
                {
                    "name": "copyOf"
                },
                {
                    "name": "copyOf"
                },
                {
                    "name": "equals"
                },
                {
                    "name": "hashCode"
                },
                {
                    "name": "fill"
                },
                {
                    "name": "fill"
                },
                {
                    "name": "fill"
                },
                {
                    "name": "sort"
                },
                {
                    "name": "fill"
                },
                {
                    "name": "toString"
                },
                {
                    "name": "fill"
                },
                {
                    "name": "fill"
                },
                {
                    "name": "fill"
                },
                {
                    "name": "fill"
                },
                {
                    "name": "copyOf"
                },
                {
                    "name": "copyOf"
                },
                {
                    "name": "sort"
                },
                {
                    "name": "fill"
                },
                {
                    "name": "copyOfRange"
                },
                {
                    "name": "fill"
                },
                {
                    "name": "hashCode"
                },
                {
                    "name": "copyOf"
                },
                {
                    "name": "copyOf"
                },
                {
                    "name": "copyOf"
                },
                {
                    "name": "equals"
                },
                {
                    "name": "sort"
                }
            ]
        },
        {
            "name": "java/lang/NoSuchFieldException",
            "properties": [],
            "method": [
                {
                    "name": "printStackTrace"
                }
            ]
        },
        {
            "name": "java/lang/IllegalAccessException",
            "properties": [],
            "method": [
                {
                    "name": "printStackTrace"
                }
            ]
        },
        {
            "name": "java/util/concurrent/atomic/AtomicInteger",
            "properties": [],
            "method": [
                {
                    "name": "<init>"
                },
                {
                    "name": "getAndIncrement"
                },
                {
                    "name": "get"
                },
                {
                    "name": "compareAndSet"
                },
                {
                    "name": "incrementAndGet"
                },
                {
                    "name": "<init>"
                },
                {
                    "name": "decrementAndGet"
                },
                {
                    "name": "set"
                },
                {
                    "name": "getAndAdd"
                }
            ]
        },
        {
            "name": "java/lang/Thread",
            "properties": [],
            "method": [
                {
                    "name": "<init>"
                },
                {
                    "name": "setName"
                },
                {
                    "name": "<init>"
                },
                {
                    "name": "start"
                },
                {
                    "name": "<init>"
                },
                {
                    "name": "setPriority"
                },
                {
                    "name": "currentThread"
                },
                {
                    "name": "interrupt"
                },
                {
                    "name": "run"
                },
                {
                    "name": "getName"
                },
                {
                    "name": "sleep"
                },
                {
                    "name": "getAllStackTraces"
                },
                {
                    "name": "setDefaultUncaughtExceptionHandler"
                },
                {
                    "name": "interrupted"
                },
                {
                    "name": "getDefaultUncaughtExceptionHandler"
                },
                {
                    "name": "join"
                }
            ]
        },
        {
            "name": "java/util/Collection",
            "properties": [],
            "method": [
                {
                    "name": "size"
                },
                {
                    "name": "iterator"
                },
                {
                    "name": "contains"
                },
                {
                    "name": "toArray"
                },
                {
                    "name": "add"
                },
                {
                    "name": "isEmpty"
                },
                {
                    "name": "removeAll"
                },
                {
                    "name": "equals"
                },
                {
                    "name": "hashCode"
                }
            ]
        },
        {
            "name": "java/lang/reflect/Array",
            "properties": [],
            "method": [
                {
                    "name": "newInstance"
                },
                {
                    "name": "newInstance"
                },
                {
                    "name": "set"
                }
            ]
        },
        {
            "name": "java/lang/ArrayIndexOutOfBoundsException",
            "properties": [],
            "method": [
                {
                    "name": "<init>"
                },
                {
                    "name": "<init>"
                }
            ]
        },
        {
            "name": "J",
            "properties": [],
            "method": [
                {
                    "name": "clone"
                }
            ]
        },
        {
            "name": "Ljava/lang/Object",
            "properties": [],
            "method": [
                {
                    "name": "clone"
                }
            ]
        },
        {
            "name": "java/lang/AssertionError",
            "properties": [],
            "method": [
                {
                    "name": "<init>"
                },
                {
                    "name": "<init>"
                }
            ]
        },
        {
            "name": "java/util/LinkedHashMap",
            "properties": [],
            "method": [
                {
                    "name": "<init>"
                },
                {
                    "name": "get"
                },
                {
                    "name": "put"
                },
                {
                    "name": "remove"
                },
                {
                    "name": "<init>"
                },
                {
                    "name": "isEmpty"
                },
                {
                    "name": "entrySet"
                },
                {
                    "name": "<init>"
                },
                {
                    "name": "keySet"
                },
                {
                    "name": "size"
                },
                {
                    "name": "values"
                },
                {
                    "name": "clear"
                },
                {
                    "name": "putAll"
                }
            ]
        },
        {
            "name": "java/lang/NullPointerException",
            "properties": [],
            "method": [
                {
                    "name": "<init>"
                },
                {
                    "name": "<init>"
                },
                {
                    "name": "printStackTrace"
                }
            ]
        },
        {
            "name": "java/util/NoSuchElementException",
            "properties": [],
            "method": [
                {
                    "name": "<init>"
                },
                {
                    "name": "<init>"
                }
            ]
        },
        {
            "name": "java/util/ConcurrentModificationException",
            "properties": [],
            "method": [
                {
                    "name": "<init>"
                }
            ]
        },
        {
            "name": "I",
            "properties": [],
            "method": [
                {
                    "name": "clone"
                }
            ]
        },
        {
            "name": "java/util/HashSet",
            "properties": [],
            "method": [
                {
                    "name": "<init>"
                },
                {
                    "name": "contains"
                },
                {
                    "name": "add"
                },
                {
                    "name": "remove"
                },
                {
                    "name": "clear"
                },
                {
                    "name": "<init>"
                },
                {
                    "name": "<init>"
                },
                {
                    "name": "iterator"
                },
                {
                    "name": "addAll"
                },
                {
                    "name": "<init>"
                },
                {
                    "name": "equals"
                },
                {
                    "name": "isEmpty"
                },
                {
                    "name": "hashCode"
                },
                {
                    "name": "size"
                }
            ]
        },
        {
            "name": "java/text/NumberFormat",
            "properties": [],
            "method": [
                {
                    "name": "getIntegerInstance"
                },
                {
                    "name": "format"
                }
            ]
        },
        {
            "name": "java/lang/SecurityException",
            "properties": [],
            "method": [
                {
                    "name": "<init>"
                },
                {
                    "name": "getMessage"
                }
            ]
        },
        {
            "name": "java/lang/IndexOutOfBoundsException",
            "properties": [],
            "method": [
                {
                    "name": "<init>"
                },
                {
                    "name": "getMessage"
                },
                {
                    "name": "<init>"
                }
            ]
        },
        {
            "name": "java/util/concurrent/RejectedExecutionException",
            "properties": [],
            "method": [
                {
                    "name": "<init>"
                }
            ]
        },
        {
            "name": "java/io/File",
            "properties": [],
            "method": [
                {
                    "name": "exists"
                },
                {
                    "name": "mkdirs"
                },
                {
                    "name": "getPath"
                },
                {
                    "name": "<init>"
                },
                {
                    "name": "<init>"
                },
                {
                    "name": "<init>"
                },
                {
                    "name": "delete"
                },
                {
                    "name": "getName"
                },
                {
                    "name": "length"
                },
                {
                    "name": "createNewFile"
                },
                {
                    "name": "getCanonicalPath"
                },
                {
                    "name": "renameTo"
                },
                {
                    "name": "getParentFile"
                },
                {
                    "name": "getAbsolutePath"
                },
                {
                    "name": "equals"
                },
                {
                    "name": "hashCode"
                },
                {
                    "name": "isDirectory"
                },
                {
                    "name": "listFiles"
                },
                {
                    "name": "mkdir"
                },
                {
                    "name": "toString"
                },
                {
                    "name": "listFiles"
                },
                {
                    "name": "list"
                },
                {
                    "name": "listFiles"
                },
                {
                    "name": "canRead"
                },
                {
                    "name": "lastModified"
                },
                {
                    "name": "isFile"
                },
                {
                    "name": "setExecutable"
                },
                {
                    "name": "setReadable"
                },
                {
                    "name": "setWritable"
                },
                {
                    "name": "getCanonicalFile"
                },
                {
                    "name": "canWrite"
                },
                {
                    "name": "createTempFile"
                }
            ]
        },
        {
            "name": "java/util/Objects",
            "properties": [],
            "method": [
                {
                    "name": "equals"
                },
                {
                    "name": "hash"
                },
                {
                    "name": "requireNonNull"
                },
                {
                    "name": "requireNonNull"
                }
            ]
        },
        {
            "name": "java/lang/Character",
            "properties": [],
            "method": [
                {
                    "name": "isWhitespace"
                },
                {
                    "name": "charCount"
                },
                {
                    "name": "getDirectionality"
                },
                {
                    "name": "getDirectionality"
                },
                {
                    "name": "isLowSurrogate"
                },
                {
                    "name": "codePointBefore"
                },
                {
                    "name": "isHighSurrogate"
                },
                {
                    "name": "codePointAt"
                },
                {
                    "name": "toString"
                },
                {
                    "name": "isDigit"
                },
                {
                    "name": "isLetter"
                },
                {
                    "name": "toUpperCase"
                },
                {
                    "name": "isISOControl"
                },
                {
                    "name": "digit"
                },
                {
                    "name": "toChars"
                },
                {
                    "name": "isUpperCase"
                },
                {
                    "name": "toLowerCase"
                },
                {
                    "name": "isLetter"
                },
                {
                    "name": "isLetterOrDigit"
                },
                {
                    "name": "isSurrogatePair"
                },
                {
                    "name": "toCodePoint"
                }
            ]
        },
        {
            "name": "java/lang/Number",
            "properties": [],
            "method": [
                {
                    "name": "longValue"
                }
            ]
        },
        {
            "name": "java/io/Closeable",
            "properties": [],
            "method": [
                {
                    "name": "close"
                }
            ]
        },
        {
            "name": "java/io/InputStream",
            "properties": [],
            "method": [
                {
                    "name": "read"
                },
                {
                    "name": "close"
                },
                {
                    "name": "<init>"
                },
                {
                    "name": "read"
                },
                {
                    "name": "read"
                },
                {
                    "name": "markSupported"
                },
                {
                    "name": "mark"
                },
                {
                    "name": "reset"
                },
                {
                    "name": "available"
                },
                {
                    "name": "skip"
                }
            ]
        },
        {
            "name": "java/io/IOException",
            "properties": [],
            "method": [
                {
                    "name": "getMessage"
                },
                {
                    "name": "<init>"
                },
                {
                    "name": "<init>"
                },
                {
                    "name": "<init>"
                },
                {
                    "name": "<init>"
                },
                {
                    "name": "initCause"
                }
            ]
        },
        {
            "name": "java/nio/channels/FileChannel",
            "properties": [],
            "method": [
                {
                    "name": "size"
                },
                {
                    "name": "map"
                },
                {
                    "name": "close"
                },
                {
                    "name": "write"
                },
                {
                    "name": "force"
                },
                {
                    "name": "lock"
                },
                {
                    "name": "position"
                },
                {
                    "name": "lock"
                },
                {
                    "name": "transferTo"
                },
                {
                    "name": "isOpen"
                },
                {
                    "name": "read"
                },
                {
                    "name": "truncate"
                },
                {
                    "name": "tryLock"
                }
            ]
        },
        {
            "name": "java/net/SocketImpl",
            "properties": [],
            "method": [
                {
                    "name": "<init>"
                }
            ]
        },
        {
            "name": "java/net/DatagramSocket",
            "properties": [],
            "method": [
                {
                    "name": "getLocalPort"
                }
            ]
        },
        {
            "name": "java/net/Socket",
            "properties": [],
            "method": [
                {
                    "name": "<init>"
                }
            ]
        },
        {
            "name": "java/lang/reflect/InvocationTargetException",
            "properties": [],
            "method": [
                {
                    "name": "getCause"
                },
                {
                    "name": "printStackTrace"
                }
            ]
        },
        {
            "name": "java/util/concurrent/Callable",
            "properties": [],
            "method": [
                {
                    "name": "call"
                }
            ]
        },
        {
            "name": "java/util/concurrent/atomic/AtomicReference",
            "properties": [],
            "method": [
                {
                    "name": "set"
                },
                {
                    "name": "<init>"
                },
                {
                    "name": "get"
                },
                {
                    "name": "getAndSet"
                },
                {
                    "name": "compareAndSet"
                },
                {
                    "name": "<init>"
                }
            ]
        },
        {
            "name": "java/util/concurrent/locks/ReentrantLock",
            "properties": [],
            "method": [
                {
                    "name": "lock"
                },
                {
                    "name": "unlock"
                },
                {
                    "name": "<init>"
                },
                {
                    "name": "newCondition"
                }
            ]
        },
        {
            "name": "java/util/concurrent/atomic/AtomicBoolean",
            "properties": [],
            "method": [
                {
                    "name": "set"
                },
                {
                    "name": "<init>"
                },
                {
                    "name": "get"
                },
                {
                    "name": "compareAndSet"
                },
                {
                    "name": "getAndSet"
                },
                {
                    "name": "<init>"
                }
            ]
        },
        {
            "name": "java/util/concurrent/locks/Condition",
            "properties": [],
            "method": [
                {
                    "name": "signal"
                },
                {
                    "name": "awaitNanos"
                },
                {
                    "name": "signalAll"
                },
                {
                    "name": "await"
                }
            ]
        },
        {
            "name": "java/util/concurrent/TimeUnit",
            "properties": [],
            "method": [
                {
                    "name": "toNanos"
                },
                {
                    "name": "toMillis"
                },
                {
                    "name": "toSeconds"
                },
                {
                    "name": "toString"
                },
                {
                    "name": "convert"
                }
            ]
        },
        {
            "name": "java/lang/InterruptedException",
            "properties": [],
            "method": [
                {
                    "name": "<init>"
                },
                {
                    "name": "<init>"
                }
            ]
        },
        {
            "name": "java/util/concurrent/FutureTask",
            "properties": [],
            "method": [
                {
                    "name": "<init>"
                },
                {
                    "name": "cancel"
                },
                {
                    "name": "get"
                },
                {
                    "name": "get"
                },
                {
                    "name": "<init>"
                },
                {
                    "name": "setException"
                }
            ]
        },
        {
            "name": "java/util/concurrent/Executors",
            "properties": [],
            "method": [
                {
                    "name": "newFixedThreadPool"
                },
                {
                    "name": "newSingleThreadExecutor"
                },
                {
                    "name": "newCachedThreadPool"
                },
                {
                    "name": "newSingleThreadExecutor"
                },
                {
                    "name": "defaultThreadFactory"
                },
                {
                    "name": "newSingleThreadScheduledExecutor"
                },
                {
                    "name": "callable"
                },
                {
                    "name": "callable"
                },
                {
                    "name": "newFixedThreadPool"
                },
                {
                    "name": "newSingleThreadScheduledExecutor"
                },
                {
                    "name": "unconfigurableExecutorService"
                },
                {
                    "name": "newScheduledThreadPool"
                },
                {
                    "name": "unconfigurableScheduledExecutorService"
                }
            ]
        },
        {
            "name": "java/util/concurrent/Executor",
            "properties": [],
            "method": [
                {
                    "name": "execute"
                }
            ]
        },
        {
            "name": "java/util/regex/Pattern",
            "properties": [],
            "method": [
                {
                    "name": "compile"
                },
                {
                    "name": "matcher"
                },
                {
                    "name": "compile"
                },
                {
                    "name": "split"
                },
                {
                    "name": "quote"
                }
            ]
        },
        {
            "name": "java/util/regex/MatchResult",
            "properties": [],
            "method": [
                {
                    "name": "end"
                },
                {
                    "name": "group"
                },
                {
                    "name": "groupCount"
                }
            ]
        },
        {
            "name": "java/util/regex/Matcher",
            "properties": [],
            "method": [
                {
                    "name": "find"
                },
                {
                    "name": "end"
                },
                {
                    "name": "start"
                },
                {
                    "name": "group"
                },
                {
                    "name": "find"
                },
                {
                    "name": "matches"
                },
                {
                    "name": "region"
                },
                {
                    "name": "lookingAt"
                },
                {
                    "name": "toMatchResult"
                },
                {
                    "name": "group"
                },
                {
                    "name": "appendReplacement"
                },
                {
                    "name": "appendTail"
                },
                {
                    "name": "replaceFirst"
                },
                {
                    "name": "replaceAll"
                }
            ]
        },
        {
            "name": "java/net/URLEncoder",
            "properties": [],
            "method": [
                {
                    "name": "encode"
                }
            ]
        },
        {
            "name": "java/io/FileDescriptor",
            "properties": [],
            "method": [
                {
                    "name": "sync"
                }
            ]
        },
        {
            "name": "java/io/Writer",
            "properties": [],
            "method": [
                {
                    "name": "<init>"
                },
                {
                    "name": "write"
                },
                {
                    "name": "close"
                },
                {
                    "name": "append"
                },
                {
                    "name": "append"
                },
                {
                    "name": "flush"
                },
                {
                    "name": "write"
                }
            ]
        },
        {
            "name": "java/io/PrintWriter",
            "properties": [],
            "method": [
                {
                    "name": "print"
                },
                {
                    "name": "print"
                },
                {
                    "name": "println"
                },
                {
                    "name": "print"
                },
                {
                    "name": "println"
                },
                {
                    "name": "<init>"
                },
                {
                    "name": "close"
                },
                {
                    "name": "append"
                },
                {
                    "name": "println"
                },
                {
                    "name": "println"
                },
                {
                    "name": "print"
                },
                {
                    "name": "println"
                }
            ]
        },
        {
            "name": "java/lang/AutoCloseable",
            "properties": [],
            "method": [
                {
                    "name": "close"
                }
            ]
        },
        {
            "name": "java/lang/reflect/Modifier",
            "properties": [],
            "method": [
                {
                    "name": "isPublic"
                },
                {
                    "name": "isStatic"
                }
            ]
        },
        {
            "name": "java/lang/Package",
            "properties": [],
            "method": [
                {
                    "name": "getName"
                }
            ]
        },
        {
            "name": "java/util/concurrent/ExecutionException",
            "properties": [],
            "method": [
                {
                    "name": "getCause"
                },
                {
                    "name": "<init>"
                },
                {
                    "name": "<init>"
                }
            ]
        },
        {
            "name": "java/util/concurrent/LinkedBlockingQueue",
            "properties": [],
            "method": [
                {
                    "name": "<init>"
                },
                {
                    "name": "<init>"
                },
                {
                    "name": "poll"
                },
                {
                    "name": "put"
                },
                {
                    "name": "clear"
                }
            ]
        },
        {
            "name": "java/util/concurrent/ThreadPoolExecutor",
            "properties": [],
            "method": [
                {
                    "name": "<init>"
                },
                {
                    "name": "submit"
                },
                {
                    "name": "<init>"
                },
                {
                    "name": "afterExecute"
                },
                {
                    "name": "execute"
                },
                {
                    "name": "getQueue"
                },
                {
                    "name": "allowCoreThreadTimeOut"
                }
            ]
        },
        {
            "name": "F",
            "properties": [],
            "method": [
                {
                    "name": "clone"
                }
            ]
        },
        {
            "name": "java/util/StringTokenizer",
            "properties": [],
            "method": [
                {
                    "name": "<init>"
                },
                {
                    "name": "countTokens"
                },
                {
                    "name": "hasMoreTokens"
                },
                {
                    "name": "nextToken"
                }
            ]
        },
        {
            "name": "java/io/ObjectInputStream",
            "properties": [],
            "method": [
                {
                    "name": "<init>"
                },
                {
                    "name": "resolveClass"
                },
                {
                    "name": "readObject"
                },
                {
                    "name": "close"
                }
            ]
        },
        {
            "name": "java/io/ObjectStreamClass",
            "properties": [],
            "method": [
                {
                    "name": "getName"
                }
            ]
        },
        {
            "name": "java/io/ByteArrayOutputStream",
            "properties": [],
            "method": [
                {
                    "name": "<init>"
                },
                {
                    "name": "toByteArray"
                },
                {
                    "name": "size"
                },
                {
                    "name": "writeTo"
                },
                {
                    "name": "close"
                },
                {
                    "name": "<init>"
                },
                {
                    "name": "write"
                },
                {
                    "name": "toString"
                },
                {
                    "name": "toString"
                },
                {
                    "name": "flush"
                }
            ]
        },
        {
            "name": "java/io/ObjectOutputStream",
            "properties": [],
            "method": [
                {
                    "name": "<init>"
                },
                {
                    "name": "writeObject"
                },
                {
                    "name": "close"
                },
                {
                    "name": "flush"
                }
            ]
        },
        {
            "name": "java/io/ByteArrayInputStream",
            "properties": [],
            "method": [
                {
                    "name": "<init>"
                },
                {
                    "name": "close"
                }
            ]
        },
        {
            "name": "java/lang/Exception",
            "properties": [],
            "method": [
                {
                    "name": "getMessage"
                },
                {
                    "name": "<init>"
                },
                {
                    "name": "<init>"
                },
                {
                    "name": "<init>"
                },
                {
                    "name": "<init>"
                },
                {
                    "name": "printStackTrace"
                },
                {
                    "name": "getCause"
                }
            ]
        },
        {
            "name": "java/io/FilterInputStream",
            "properties": [],
            "method": [
                {
                    "name": "<init>"
                },
                {
                    "name": "read"
                },
                {
                    "name": "read"
                },
                {
                    "name": "skip"
                },
                {
                    "name": "available"
                },
                {
                    "name": "mark"
                },
                {
                    "name": "reset"
                }
            ]
        },
        {
            "name": "java/io/DataOutputStream",
            "properties": [],
            "method": [
                {
                    "name": "<init>"
                },
                {
                    "name": "flush"
                },
                {
                    "name": "writeInt"
                },
                {
                    "name": "writeBoolean"
                },
                {
                    "name": "write"
                },
                {
                    "name": "write"
                },
                {
                    "name": "writeDouble"
                },
                {
                    "name": "writeFloat"
                },
                {
                    "name": "writeLong"
                },
                {
                    "name": "writeUTF"
                }
            ]
        },
        {
            "name": "",
            "properties": [],
            "method": []
        },
        {
            "name": "java/util/zip/ZipInputStream",
            "properties": [],
            "method": [
                {
                    "name": "<init>"
                },
                {
                    "name": "getNextEntry"
                },
                {
                    "name": "closeEntry"
                },
                {
                    "name": "close"
                },
                {
                    "name": "available"
                },
                {
                    "name": "read"
                },
                {
                    "name": "read"
                },
                {
                    "name": "read"
                }
            ]
        },
        {
            "name": "java/security/MessageDigest",
            "properties": [],
            "method": [
                {
                    "name": "getInstance"
                },
                {
                    "name": "reset"
                },
                {
                    "name": "digest"
                },
                {
                    "name": "update"
                },
                {
                    "name": "update"
                },
                {
                    "name": "digest"
                }
            ]
        },
        {
            "name": "java/util/zip/ZipEntry",
            "properties": [],
            "method": [
                {
                    "name": "isDirectory"
                },
                {
                    "name": "getName"
                },
                {
                    "name": "<init>"
                },
                {
                    "name": "getMethod"
                },
                {
                    "name": "setMethod"
                },
                {
                    "name": "getSize"
                },
                {
                    "name": "setSize"
                },
                {
                    "name": "setCompressedSize"
                },
                {
                    "name": "getCrc"
                },
                {
                    "name": "setCrc"
                },
                {
                    "name": "setExtra"
                }
            ]
        },
        {
            "name": "java/security/DigestInputStream",
            "properties": [],
            "method": [
                {
                    "name": "<init>"
                }
            ]
        },
        {
            "name": "java/io/PipedOutputStream",
            "properties": [],
            "method": [
                {
                    "name": "<init>"
                },
                {
                    "name": "close"
                },
                {
                    "name": "write"
                },
                {
                    "name": "write"
                }
            ]
        },
        {
            "name": "java/io/PipedInputStream",
            "properties": [],
            "method": [
                {
                    "name": "<init>"
                },
                {
                    "name": "connect"
                },
                {
                    "name": "<init>"
                },
                {
                    "name": "available"
                },
                {
                    "name": "close"
                },
                {
                    "name": "read"
                },
                {
                    "name": "read"
                },
                {
                    "name": "read"
                },
                {
                    "name": "<init>"
                }
            ]
        },
        {
            "name": "java/io/OutputStream",
            "properties": [],
            "method": [
                {
                    "name": "write"
                },
                {
                    "name": "<init>"
                },
                {
                    "name": "write"
                },
                {
                    "name": "write"
                },
                {
                    "name": "close"
                },
                {
                    "name": "flush"
                }
            ]
        },
        {
            "name": "java/security/spec/PKCS8EncodedKeySpec",
            "properties": [],
            "method": [
                {
                    "name": "<init>"
                }
            ]
        },
        {
            "name": "java/security/KeyFactory",
            "properties": [],
            "method": [
                {
                    "name": "getInstance"
                },
                {
                    "name": "generatePrivate"
                },
                {
                    "name": "generatePublic"
                }
            ]
        },
        {
            "name": "java/security/Signature",
            "properties": [],
            "method": [
                {
                    "name": "getInstance"
                },
                {
                    "name": "initSign"
                },
                {
                    "name": "update"
                },
                {
                    "name": "sign"
                }
            ]
        },
        {
            "name": "java/util/zip/ZipOutputStream",
            "properties": [],
            "method": [
                {
                    "name": "<init>"
                },
                {
                    "name": "putNextEntry"
                },
                {
                    "name": "setMethod"
                },
                {
                    "name": "write"
                },
                {
                    "name": "closeEntry"
                },
                {
                    "name": "close"
                }
            ]
        },
        {
            "name": "java/util/Random",
            "properties": [],
            "method": [
                {
                    "name": "nextInt"
                },
                {
                    "name": "<init>"
                },
                {
                    "name": "<init>"
                },
                {
                    "name": "nextLong"
                },
                {
                    "name": "nextDouble"
                }
            ]
        },
        {
            "name": "java/util/concurrent/ExecutorService",
            "properties": [],
            "method": [
                {
                    "name": "execute"
                },
                {
                    "name": "submit"
                },
                {
                    "name": "awaitTermination"
                },
                {
                    "name": "invokeAll"
                },
                {
                    "name": "invokeAll"
                },
                {
                    "name": "invokeAny"
                },
                {
                    "name": "invokeAny"
                },
                {
                    "name": "isShutdown"
                },
                {
                    "name": "isTerminated"
                },
                {
                    "name": "shutdown"
                },
                {
                    "name": "shutdownNow"
                },
                {
                    "name": "submit"
                },
                {
                    "name": "submit"
                }
            ]
        },
        {
            "name": "java/util/zip/CRC32",
            "properties": [],
            "method": [
                {
                    "name": "<init>"
                },
                {
                    "name": "update"
                },
                {
                    "name": "getValue"
                }
            ]
        },
        {
            "name": "java/io/BufferedReader",
            "properties": [],
            "method": [
                {
                    "name": "<init>"
                },
                {
                    "name": "read"
                },
                {
                    "name": "close"
                },
                {
                    "name": "readLine"
                },
                {
                    "name": "mark"
                },
                {
                    "name": "read"
                },
                {
                    "name": "reset"
                },
                {
                    "name": "skip"
                },
                {
                    "name": "<init>"
                },
                {
                    "name": "read"
                }
            ]
        },
        {
            "name": "java/io/InputStreamReader",
            "properties": [],
            "method": [
                {
                    "name": "<init>"
                },
                {
                    "name": "<init>"
                },
                {
                    "name": "<init>"
                }
            ]
        },
        {
            "name": "java/text/DecimalFormat",
            "properties": [],
            "method": [
                {
                    "name": "<init>"
                },
                {
                    "name": "setDecimalFormatSymbols"
                },
                {
                    "name": "format"
                }
            ]
        },
        {
            "name": "java/text/DecimalFormatSymbols",
            "properties": [],
            "method": [
                {
                    "name": "getInstance"
                }
            ]
        },
        {
            "name": "java/io/StringWriter",
            "properties": [],
            "method": [
                {
                    "name": "<init>"
                },
                {
                    "name": "toString"
                },
                {
                    "name": "<init>"
                },
                {
                    "name": "write"
                }
            ]
        },
        {
            "name": "B",
            "properties": [],
            "method": []
        },
        {
            "name": "java/nio/ByteBuffer",
            "properties": [],
            "method": [
                {
                    "name": "get"
                },
                {
                    "name": "position"
                },
                {
                    "name": "get"
                },
                {
                    "name": "get"
                },
                {
                    "name": "getShort"
                },
                {
                    "name": "limit"
                },
                {
                    "name": "position"
                },
                {
                    "name": "asReadOnlyBuffer"
                },
                {
                    "name": "order"
                },
                {
                    "name": "wrap"
                },
                {
                    "name": "limit"
                },
                {
                    "name": "remaining"
                },
                {
                    "name": "getShort"
                },
                {
                    "name": "getInt"
                },
                {
                    "name": "hasRemaining"
                },
                {
                    "name": "allocateDirect"
                },
                {
                    "name": "put"
                },
                {
                    "name": "isReadOnly"
                },
                {
                    "name": "hasArray"
                },
                {
                    "name": "array"
                },
                {
                    "name": "arrayOffset"
                },
                {
                    "name": "put"
                },
                {
                    "name": "allocate"
                },
                {
                    "name": "putInt"
                },
                {
                    "name": "putShort"
                },
                {
                    "name": "putLong"
                },
                {
                    "name": "flip"
                },
                {
                    "name": "getInt"
                },
                {
                    "name": "putFloat"
                }
            ]
        },
        {
            "name": "java/net/URL",
            "properties": [],
            "method": [
                {
                    "name": "<init>"
                },
                {
                    "name": "openConnection"
                },
                {
                    "name": "getHost"
                },
                {
                    "name": "getPort"
                },
                {
                    "name": "getProtocol"
                },
                {
                    "name": "getPath"
                },
                {
                    "name": "getQuery"
                },
                {
                    "name": "getRef"
                },
                {
                    "name": "toURI"
                },
                {
                    "name": "<init>"
                },
                {
                    "name": "toString"
                },
                {
                    "name": "openConnection"
                }
            ]
        },
        {
            "name": "java/util/Queue",
            "properties": [],
            "method": [
                {
                    "name": "offer"
                },
                {
                    "name": "poll"
                },
                {
                    "name": "size"
                },
                {
                    "name": "isEmpty"
                },
                {
                    "name": "remove"
                },
                {
                    "name": "add"
                },
                {
                    "name": "iterator"
                },
                {
                    "name": "clear"
                },
                {
                    "name": "contains"
                },
                {
                    "name": "remove"
                },
                {
                    "name": "removeAll"
                },
                {
                    "name": "toArray"
                },
                {
                    "name": "toArray"
                }
            ]
        },
        {
            "name": "java/io/OutputStreamWriter",
            "properties": [],
            "method": [
                {
                    "name": "<init>"
                }
            ]
        },
        {
            "name": "java/io/PrintStream",
            "properties": [],
            "method": [
                {
                    "name": "println"
                }
            ]
        },
        {
            "name": "java/io/BufferedWriter",
            "properties": [],
            "method": [
                {
                    "name": "<init>"
                }
            ]
        },
        {
            "name": "java/nio/charset/Charset",
            "properties": [],
            "method": [
                {
                    "name": "name"
                },
                {
                    "name": "equals"
                },
                {
                    "name": "forName"
                },
                {
                    "name": "defaultCharset"
                },
                {
                    "name": "newEncoder"
                }
            ]
        },
        {
            "name": "java/io/EOFException",
            "properties": [],
            "method": [
                {
                    "name": "<init>"
                }
            ]
        },
        {
            "name": "java/io/Reader",
            "properties": [],
            "method": [
                {
                    "name": "read"
                },
                {
                    "name": "close"
                }
            ]
        },
        {
            "name": "java/io/FileNotFoundException",
            "properties": [],
            "method": [
                {
                    "name": "<init>"
                },
                {
                    "name": "initCause"
                },
                {
                    "name": "getMessage"
                }
            ]
        },
        {
            "name": "java/lang/ref/ReferenceQueue",
            "properties": [],
            "method": [
                {
                    "name": "<init>"
                },
                {
                    "name": "remove"
                },
                {
                    "name": "poll"
                }
            ]
        },
        {
            "name": "java/lang/Appendable",
            "properties": [],
            "method": [
                {
                    "name": "append"
                },
                {
                    "name": "append"
                },
                {
                    "name": "append"
                }
            ]
        },
        {
            "name": "java/util/TreeMap",
            "properties": [],
            "method": [
                {
                    "name": "<init>"
                },
                {
                    "name": "<init>"
                },
                {
                    "name": "put"
                },
                {
                    "name": "descendingMap"
                },
                {
                    "name": "<init>"
                }
            ]
        },
        {
            "name": "java/util/concurrent/locks/Lock",
            "properties": [],
            "method": [
                {
                    "name": "lock"
                },
                {
                    "name": "unlock"
                },
                {
                    "name": "newCondition"
                }
            ]
        },
        {
            "name": "java/util/concurrent/PriorityBlockingQueue",
            "properties": [],
            "method": [
                {
                    "name": "<init>"
                },
                {
                    "name": "clear"
                },
                {
                    "name": "contains"
                },
                {
                    "name": "drainTo"
                },
                {
                    "name": "drainTo"
                },
                {
                    "name": "remove"
                },
                {
                    "name": "poll"
                },
                {
                    "name": "poll"
                },
                {
                    "name": "peek"
                },
                {
                    "name": "take"
                },
                {
                    "name": "offer"
                },
                {
                    "name": "removeAll"
                },
                {
                    "name": "size"
                },
                {
                    "name": "toArray"
                },
                {
                    "name": "toArray"
                },
                {
                    "name": "add"
                },
                {
                    "name": "isEmpty"
                }
            ]
        },
        {
            "name": "java/util/concurrent/SynchronousQueue",
            "properties": [],
            "method": [
                {
                    "name": "<init>"
                }
            ]
        },
        {
            "name": "java/lang/Runtime",
            "properties": [],
            "method": [
                {
                    "name": "getRuntime"
                },
                {
                    "name": "availableProcessors"
                },
                {
                    "name": "addShutdownHook"
                },
                {
                    "name": "exec"
                }
            ]
        },
        {
            "name": "java/util/EnumSet",
            "properties": [],
            "method": [
                {
                    "name": "of"
                }
            ]
        },
        {
            "name": "java/lang/Double",
            "properties": [],
            "method": [
                {
                    "name": "valueOf"
                },
                {
                    "name": "doubleValue"
                },
                {
                    "name": "valueOf"
                },
                {
                    "name": "doubleToRawLongBits"
                },
                {
                    "name": "parseDouble"
                },
                {
                    "name": "toString"
                },
                {
                    "name": "longBitsToDouble"
                },
                {
                    "name": "doubleToLongBits"
                }
            ]
        },
        {
            "name": "java/util/UUID",
            "properties": [],
            "method": [
                {
                    "name": "randomUUID"
                },
                {
                    "name": "toString"
                },
                {
                    "name": "<init>"
                },
                {
                    "name": "getLeastSignificantBits"
                },
                {
                    "name": "fromString"
                }
            ]
        },
        {
            "name": "java/util/concurrent/ConcurrentMap",
            "properties": [],
            "method": [
                {
                    "name": "get"
                },
                {
                    "name": "putIfAbsent"
                },
                {
                    "name": "clear"
                }
            ]
        },
        {
            "name": "java/io/RandomAccessFile",
            "properties": [],
            "method": [
                {
                    "name": "<init>"
                },
                {
                    "name": "getChannel"
                },
                {
                    "name": "close"
                },
                {
                    "name": "seek"
                },
                {
                    "name": "read"
                },
                {
                    "name": "setLength"
                },
                {
                    "name": "write"
                },
                {
                    "name": "readInt"
                },
                {
                    "name": "readFully"
                },
                {
                    "name": "length"
                },
                {
                    "name": "readFully"
                },
                {
                    "name": "write"
                }
            ]
        },
        {
            "name": "java/nio/MappedByteBuffer",
            "properties": [],
            "method": [
                {
                    "name": "load"
                }
            ]
        },
        {
            "name": "org/json/JSONObject",
            "properties": [],
            "method": [
                {
                    "name": "<init>"
                },
                {
                    "name": "toString"
                },
                {
                    "name": "<init>"
                },
                {
                    "name": "put"
                },
                {
                    "name": "put"
                },
                {
                    "name": "<init>"
                },
                {
                    "name": "getJSONArray"
                },
                {
                    "name": "keys"
                },
                {
                    "name": "isNull"
                },
                {
                    "name": "optString"
                },
                {
                    "name": "length"
                },
                {
                    "name": "has"
                },
                {
                    "name": "get"
                },
                {
                    "name": "getString"
                },
                {
                    "name": "getLong"
                },
                {
                    "name": "optDouble"
                },
                {
                    "name": "optInt"
                },
                {
                    "name": "optBoolean"
                },
                {
                    "name": "getJSONObject"
                },
                {
                    "name": "getInt"
                },
                {
                    "name": "put"
                },
                {
                    "name": "put"
                },
                {
                    "name": "optString"
                },
                {
                    "name": "remove"
                },
                {
                    "name": "getBoolean"
                }
            ]
        },
        {
            "name": "java/util/concurrent/ScheduledExecutorService",
            "properties": [],
            "method": [
                {
                    "name": "schedule"
                },
                {
                    "name": "execute"
                },
                {
                    "name": "submit"
                },
                {
                    "name": "scheduleAtFixedRate"
                }
            ]
        },
        {
            "name": "java/util/concurrent/ScheduledFuture",
            "properties": [],
            "method": [
                {
                    "name": "cancel"
                }
            ]
        },
        {
            "name": "org/json/JSONArray",
            "properties": [],
            "method": [
                {
                    "name": "length"
                },
                {
                    "name": "getString"
                },
                {
                    "name": "<init>"
                },
                {
                    "name": "put"
                },
                {
                    "name": "get"
                }
            ]
        },
        {
            "name": "java/io/FilterOutputStream",
            "properties": [],
            "method": [
                {
                    "name": "<init>"
                }
            ]
        },
        {
            "name": "java/util/concurrent/atomic/AtomicLong",
            "properties": [],
            "method": [
                {
                    "name": "<init>"
                },
                {
                    "name": "incrementAndGet"
                },
                {
                    "name": "getAndIncrement"
                },
                {
                    "name": "set"
                },
                {
                    "name": "get"
                },
                {
                    "name": "compareAndSet"
                }
            ]
        },
        {
            "name": "java/util/Date",
            "properties": [],
            "method": [
                {
                    "name": "<init>"
                },
                {
                    "name": "getTime"
                },
                {
                    "name": "<init>"
                }
            ]
        },
        {
            "name": "java/util/concurrent/CountDownLatch",
            "properties": [],
            "method": [
                {
                    "name": "<init>"
                },
                {
                    "name": "await"
                },
                {
                    "name": "countDown"
                },
                {
                    "name": "await"
                },
                {
                    "name": "getCount"
                }
            ]
        },
        {
            "name": "java/util/concurrent/Future",
            "properties": [],
            "method": [
                {
                    "name": "get"
                },
                {
                    "name": "get"
                },
                {
                    "name": "cancel"
                }
            ]
        },
        {
            "name": "java/util/TreeSet",
            "properties": [],
            "method": [
                {
                    "name": "isEmpty"
                },
                {
                    "name": "first"
                },
                {
                    "name": "<init>"
                },
                {
                    "name": "<init>"
                },
                {
                    "name": "add"
                },
                {
                    "name": "iterator"
                },
                {
                    "name": "<init>"
                }
            ]
        },
        {
            "name": "java/io/FilenameFilter",
            "properties": [],
            "method": [
                {
                    "name": "accept"
                }
            ]
        },
        {
            "name": "java/util/zip/GZIPOutputStream",
            "properties": [],
            "method": [
                {
                    "name": "<init>"
                },
                {
                    "name": "write"
                },
                {
                    "name": "finish"
                },
                {
                    "name": "close"
                }
            ]
        },
        {
            "name": "java/util/LinkedList",
            "properties": [],
            "method": [
                {
                    "name": "<init>"
                },
                {
                    "name": "add"
                },
                {
                    "name": "isEmpty"
                },
                {
                    "name": "getLast"
                },
                {
                    "name": "removeLast"
                },
                {
                    "name": "offer"
                },
                {
                    "name": "poll"
                },
                {
                    "name": "size"
                },
                {
                    "name": "toArray"
                },
                {
                    "name": "iterator"
                },
                {
                    "name": "clear"
                }
            ]
        },
        {
            "name": "java/lang/reflect/Proxy",
            "properties": [],
            "method": [
                {
                    "name": "isProxyClass"
                },
                {
                    "name": "getInvocationHandler"
                },
                {
                    "name": "newProxyInstance"
                }
            ]
        },
        {
            "name": "java/io/FileReader",
            "properties": [],
            "method": [
                {
                    "name": "<init>"
                },
                {
                    "name": "<init>"
                }
            ]
        },
        {
            "name": "java/lang/StackTraceElement",
            "properties": [],
            "method": [
                {
                    "name": "isNativeMethod"
                },
                {
                    "name": "getLineNumber"
                },
                {
                    "name": "getClassName"
                },
                {
                    "name": "getMethodName"
                },
                {
                    "name": "getFileName"
                },
                {
                    "name": "equals"
                }
            ]
        },
        {
            "name": "java/text/SimpleDateFormat",
            "properties": [],
            "method": [
                {
                    "name": "<init>"
                },
                {
                    "name": "format"
                },
                {
                    "name": "toPattern"
                },
                {
                    "name": "applyPattern"
                },
                {
                    "name": "setTimeZone"
                },
                {
                    "name": "setLenient"
                },
                {
                    "name": "format"
                }
            ]
        },
        {
            "name": "java/net/HttpURLConnection",
            "properties": [],
            "method": [
                {
                    "name": "getResponseCode"
                },
                {
                    "name": "disconnect"
                },
                {
                    "name": "addRequestProperty"
                },
                {
                    "name": "setDoOutput"
                },
                {
                    "name": "setFixedLengthStreamingMode"
                },
                {
                    "name": "connect"
                },
                {
                    "name": "getOutputStream"
                },
                {
                    "name": "getHeaderFields"
                },
                {
                    "name": "setRequestMethod"
                },
                {
                    "name": "setChunkedStreamingMode"
                },
                {
                    "name": "setConnectTimeout"
                },
                {
                    "name": "getHeaderFieldDate"
                },
                {
                    "name": "setInstanceFollowRedirects"
                },
                {
                    "name": "setRequestProperty"
                },
                {
                    "name": "getHeaderField"
                },
                {
                    "name": "setIfModifiedSince"
                },
                {
                    "name": "getHeaderFieldInt"
                },
                {
                    "name": "getResponseMessage"
                },
                {
                    "name": "getRequestMethod"
                },
                {
                    "name": "getRequestProperty"
                },
                {
                    "name": "setReadTimeout"
                },
                {
                    "name": "getInputStream"
                },
                {
                    "name": "getErrorStream"
                },
                {
                    "name": "getURL"
                },
                {
                    "name": "setUseCaches"
                },
                {
                    "name": "getContentEncoding"
                },
                {
                    "name": "getContentLength"
                },
                {
                    "name": "setDoInput"
                },
                {
                    "name": "setDefaultUseCaches"
                }
            ]
        },
        {
            "name": "java/util/concurrent/BlockingQueue",
            "properties": [],
            "method": [
                {
                    "name": "take"
                },
                {
                    "name": "poll"
                },
                {
                    "name": "add"
                },
                {
                    "name": "poll"
                },
                {
                    "name": "peek"
                }
            ]
        },
        {
            "name": "java/util/concurrent/TimeoutException",
            "properties": [],
            "method": [
                {
                    "name": "<init>"
                },
                {
                    "name": "<init>"
                }
            ]
        },
        {
            "name": "java/lang/Iterable",
            "properties": [],
            "method": [
                {
                    "name": "iterator"
                }
            ]
        },
        {
            "name": "java/lang/NumberFormatException",
            "properties": [],
            "method": [
                {
                    "name": "<init>"
                }
            ]
        },
        {
            "name": "java/util/Properties",
            "properties": [],
            "method": [
                {
                    "name": "<init>"
                },
                {
                    "name": "load"
                },
                {
                    "name": "getProperty"
                },
                {
                    "name": "setProperty"
                },
                {
                    "name": "store"
                },
                {
                    "name": "getProperty"
                }
            ]
        },
        {
            "name": "java/math/BigInteger",
            "properties": [],
            "method": [
                {
                    "name": "<init>"
                },
                {
                    "name": "toByteArray"
                },
                {
                    "name": "<init>"
                },
                {
                    "name": "<init>"
                }
            ]
        },
        {
            "name": "java/util/Stack",
            "properties": [],
            "method": [
                {
                    "name": "<init>"
                },
                {
                    "name": "push"
                },
                {
                    "name": "isEmpty"
                },
                {
                    "name": "pop"
                }
            ]
        },
        {
            "name": "java/net/URLDecoder",
            "properties": [],
            "method": [
                {
                    "name": "decode"
                }
            ]
        },
        {
            "name": "java/net/URI",
            "properties": [],
            "method": [
                {
                    "name": "getRawQuery"
                },
                {
                    "name": "<init>"
                },
                {
                    "name": "toASCIIString"
                },
                {
                    "name": "equals"
                }
            ]
        },
        {
            "name": "java/util/Scanner",
            "properties": [],
            "method": [
                {
                    "name": "<init>"
                },
                {
                    "name": "useDelimiter"
                },
                {
                    "name": "hasNext"
                },
                {
                    "name": "next"
                },
                {
                    "name": "<init>"
                }
            ]
        },
        {
            "name": "java/lang/StringBuffer",
            "properties": [],
            "method": [
                {
                    "name": "<init>"
                },
                {
                    "name": "toString"
                }
            ]
        },
        {
            "name": "java/util/concurrent/ThreadFactory",
            "properties": [],
            "method": [
                {
                    "name": "newThread"
                }
            ]
        },
        {
            "name": "java/lang/ClassLoader",
            "properties": [],
            "method": [
                {
                    "name": "loadClass"
                },
                {
                    "name": "getSystemClassLoader"
                },
                {
                    "name": "<init>"
                },
                {
                    "name": "loadClass"
                }
            ]
        },
        {
            "name": "dalvik/system/PathClassLoader",
            "properties": [],
            "method": [
                {
                    "name": "<init>"
                },
                {
                    "name": "loadClass"
                }
            ]
        },
        {
            "name": "java/lang/NoSuchMethodError",
            "properties": [],
            "method": [
                {
                    "name": "<init>"
                }
            ]
        },
        {
            "name": "java/util/Vector",
            "properties": [],
            "method": [
                {
                    "name": "<init>"
                }
            ]
        },
        {
            "name": "java/util/logging/Logger",
            "properties": [],
            "method": [
                {
                    "name": "getLogger"
                },
                {
                    "name": "logp"
                },
                {
                    "name": "logp"
                },
                {
                    "name": "log"
                }
            ]
        },
        {
            "name": "java/util/ServiceLoader",
            "properties": [],
            "method": [
                {
                    "name": "load"
                },
                {
                    "name": "iterator"
                }
            ]
        },
        {
            "name": "java/lang/Void",
            "properties": [],
            "method": []
        },
        {
            "name": "java/lang/Deprecated",
            "properties": [],
            "method": []
        },
        {
            "name": "java/util/AbstractMap",
            "properties": [],
            "method": [
                {
                    "name": "<init>"
                },
                {
                    "name": "equals"
                }
            ]
        },
        {
            "name": "java/lang/Comparable",
            "properties": [],
            "method": [
                {
                    "name": "compareTo"
                }
            ]
        },
        {
            "name": "java/util/SortedMap",
            "properties": [],
            "method": [
                {
                    "name": "entrySet"
                },
                {
                    "name": "put"
                },
                {
                    "name": "values"
                }
            ]
        },
        {
            "name": "java/util/AbstractSet",
            "properties": [],
            "method": [
                {
                    "name": "<init>"
                }
            ]
        },
        {
            "name": "java/util/ListIterator",
            "properties": [],
            "method": [
                {
                    "name": "hasNext"
                },
                {
                    "name": "hasPrevious"
                },
                {
                    "name": "next"
                },
                {
                    "name": "nextIndex"
                },
                {
                    "name": "previous"
                },
                {
                    "name": "previousIndex"
                }
            ]
        },
        {
            "name": "sun/misc/Unsafe",
            "properties": [],
            "method": [
                {
                    "name": "putInt"
                },
                {
                    "name": "putLong"
                },
                {
                    "name": "getInt"
                },
                {
                    "name": "getLong"
                },
                {
                    "name": "objectFieldOffset"
                },
                {
                    "name": "allocateInstance"
                },
                {
                    "name": "putObject"
                },
                {
                    "name": "arrayBaseOffset"
                },
                {
                    "name": "arrayIndexScale"
                },
                {
                    "name": "getObject"
                },
                {
                    "name": "getByte"
                },
                {
                    "name": "putByte"
                },
                {
                    "name": "putDouble"
                },
                {
                    "name": "putFloat"
                },
                {
                    "name": "putBoolean"
                },
                {
                    "name": "getBoolean"
                },
                {
                    "name": "getFloat"
                },
                {
                    "name": "getDouble"
                }
            ]
        },
        {
            "name": "D",
            "properties": [],
            "method": []
        },
        {
            "name": "Z",
            "properties": [],
            "method": []
        },
        {
            "name": "java/nio/ByteOrder",
            "properties": [],
            "method": [
                {
                    "name": "nativeOrder"
                }
            ]
        },
        {
            "name": "java/security/AccessController",
            "properties": [],
            "method": [
                {
                    "name": "doPrivileged"
                },
                {
                    "name": "doPrivileged"
                }
            ]
        },
        {
            "name": "java/nio/Buffer",
            "properties": [],
            "method": []
        },
        {
            "name": "java/security/SecureRandom",
            "properties": [],
            "method": [
                {
                    "name": "nextLong"
                },
                {
                    "name": "nextInt"
                },
                {
                    "name": "<init>"
                },
                {
                    "name": "nextBytes"
                }
            ]
        },
        {
            "name": "java/util/concurrent/Semaphore",
            "properties": [],
            "method": [
                {
                    "name": "release"
                },
                {
                    "name": "acquire"
                },
                {
                    "name": "<init>"
                }
            ]
        },
        {
            "name": "javax/net/ssl/SSLSocket",
            "properties": [],
            "method": [
                {
                    "name": "<init>"
                },
                {
                    "name": "addHandshakeCompletedListener"
                },
                {
                    "name": "bind"
                },
                {
                    "name": "close"
                },
                {
                    "name": "connect"
                },
                {
                    "name": "connect"
                },
                {
                    "name": "getChannel"
                },
                {
                    "name": "getEnableSessionCreation"
                },
                {
                    "name": "getEnabledCipherSuites"
                },
                {
                    "name": "getEnabledProtocols"
                },
                {
                    "name": "getInetAddress"
                },
                {
                    "name": "getInputStream"
                },
                {
                    "name": "getKeepAlive"
                },
                {
                    "name": "getLocalAddress"
                },
                {
                    "name": "getLocalPort"
                },
                {
                    "name": "getLocalSocketAddress"
                },
                {
                    "name": "getNeedClientAuth"
                },
                {
                    "name": "getOOBInline"
                },
                {
                    "name": "getOutputStream"
                },
                {
                    "name": "getPort"
                },
                {
                    "name": "getReceiveBufferSize"
                },
                {
                    "name": "getRemoteSocketAddress"
                },
                {
                    "name": "getReuseAddress"
                },
                {
                    "name": "getSendBufferSize"
                },
                {
                    "name": "getSession"
                },
                {
                    "name": "getSoLinger"
                },
                {
                    "name": "getSoTimeout"
                },
                {
                    "name": "getSupportedCipherSuites"
                },
                {
                    "name": "getSupportedProtocols"
                },
                {
                    "name": "getTcpNoDelay"
                },
                {
                    "name": "getTrafficClass"
                },
                {
                    "name": "getUseClientMode"
                },
                {
                    "name": "getWantClientAuth"
                },
                {
                    "name": "isBound"
                },
                {
                    "name": "isClosed"
                },
                {
                    "name": "isConnected"
                },
                {
                    "name": "isInputShutdown"
                },
                {
                    "name": "isOutputShutdown"
                },
                {
                    "name": "removeHandshakeCompletedListener"
                },
                {
                    "name": "sendUrgentData"
                },
                {
                    "name": "setEnableSessionCreation"
                },
                {
                    "name": "setEnabledCipherSuites"
                },
                {
                    "name": "setEnabledProtocols"
                },
                {
                    "name": "setKeepAlive"
                },
                {
                    "name": "setNeedClientAuth"
                },
                {
                    "name": "setOOBInline"
                },
                {
                    "name": "setPerformancePreferences"
                },
                {
                    "name": "setReceiveBufferSize"
                },
                {
                    "name": "setReuseAddress"
                },
                {
                    "name": "setSendBufferSize"
                },
                {
                    "name": "setSoLinger"
                },
                {
                    "name": "setSoTimeout"
                },
                {
                    "name": "setTcpNoDelay"
                },
                {
                    "name": "setTrafficClass"
                },
                {
                    "name": "setUseClientMode"
                },
                {
                    "name": "setWantClientAuth"
                },
                {
                    "name": "shutdownInput"
                },
                {
                    "name": "shutdownOutput"
                },
                {
                    "name": "startHandshake"
                },
                {
                    "name": "toString"
                }
            ]
        },
        {
            "name": "javax/net/ssl/HttpsURLConnection",
            "properties": [],
            "method": [
                {
                    "name": "getDefaultSSLSocketFactory"
                },
                {
                    "name": "setInstanceFollowRedirects"
                },
                {
                    "name": "setSSLSocketFactory"
                }
            ]
        },
        {
            "name": "javax/net/ssl/SSLSocketFactory",
            "properties": [],
            "method": [
                {
                    "name": "<init>"
                },
                {
                    "name": "createSocket"
                },
                {
                    "name": "createSocket"
                },
                {
                    "name": "createSocket"
                },
                {
                    "name": "createSocket"
                },
                {
                    "name": "createSocket"
                },
                {
                    "name": "createSocket"
                },
                {
                    "name": "getDefaultCipherSuites"
                },
                {
                    "name": "getSupportedCipherSuites"
                }
            ]
        },
        {
            "name": "java/util/BitSet",
            "properties": [],
            "method": [
                {
                    "name": "<init>"
                },
                {
                    "name": "set"
                },
                {
                    "name": "set"
                },
                {
                    "name": "isEmpty"
                },
                {
                    "name": "clear"
                },
                {
                    "name": "<init>"
                },
                {
                    "name": "get"
                },
                {
                    "name": "clear"
                },
                {
                    "name": "length"
                },
                {
                    "name": "set"
                }
            ]
        },
        {
            "name": "java/util/concurrent/CancellationException",
            "properties": [],
            "method": [
                {
                    "name": "<init>"
                },
                {
                    "name": "initCause"
                },
                {
                    "name": "<init>"
                }
            ]
        },
        {
            "name": "java/util/LinkedHashSet",
            "properties": [],
            "method": [
                {
                    "name": "<init>"
                },
                {
                    "name": "iterator"
                },
                {
                    "name": "add"
                },
                {
                    "name": "clear"
                },
                {
                    "name": "remove"
                }
            ]
        },
        {
            "name": "java/text/DateFormat",
            "properties": [],
            "method": [
                {
                    "name": "parse"
                },
                {
                    "name": "format"
                },
                {
                    "name": "getDateInstance"
                },
                {
                    "name": "setTimeZone"
                }
            ]
        },
        {
            "name": "java/util/TimeZone",
            "properties": [],
            "method": [
                {
                    "name": "getTimeZone"
                }
            ]
        },
        {
            "name": "java/util/concurrent/ArrayBlockingQueue",
            "properties": [],
            "method": [
                {
                    "name": "<init>"
                }
            ]
        },
        {
            "name": "java/util/concurrent/ScheduledThreadPoolExecutor",
            "properties": [],
            "method": [
                {
                    "name": "<init>"
                }
            ]
        },
        {
            "name": "java/security/KeyPairGenerator",
            "properties": [],
            "method": [
                {
                    "name": "getInstance"
                },
                {
                    "name": "initialize"
                },
                {
                    "name": "generateKeyPair"
                }
            ]
        },
        {
            "name": "java/security/KeyPair",
            "properties": [],
            "method": [
                {
                    "name": "getPublic"
                },
                {
                    "name": "getPrivate"
                },
                {
                    "name": "<init>"
                }
            ]
        },
        {
            "name": "java/security/PublicKey",
            "properties": [],
            "method": [
                {
                    "name": "getEncoded"
                }
            ]
        },
        {
            "name": "java/security/PrivateKey",
            "properties": [],
            "method": [
                {
                    "name": "getEncoded"
                }
            ]
        },
        {
            "name": "java/nio/channels/Channels",
            "properties": [],
            "method": [
                {
                    "name": "newOutputStream"
                },
                {
                    "name": "newInputStream"
                }
            ]
        },
        {
            "name": "java/security/spec/X509EncodedKeySpec",
            "properties": [],
            "method": [
                {
                    "name": "<init>"
                }
            ]
        },
        {
            "name": "java/util/zip/ZipFile",
            "properties": [],
            "method": [
                {
                    "name": "entries"
                },
                {
                    "name": "close"
                },
                {
                    "name": "getInputStream"
                },
                {
                    "name": "<init>"
                }
            ]
        },
        {
            "name": "java/util/Enumeration",
            "properties": [],
            "method": [
                {
                    "name": "hasMoreElements"
                },
                {
                    "name": "nextElement"
                }
            ]
        },
        {
            "name": "java/security/InvalidKeyException",
            "properties": [],
            "method": [
                {
                    "name": "<init>"
                }
            ]
        },
        {
            "name": "java/io/Flushable",
            "properties": [],
            "method": [
                {
                    "name": "flush"
                }
            ]
        },
        {
            "name": "java/util/concurrent/locks/AbstractQueuedSynchronizer",
            "properties": [],
            "method": [
                {
                    "name": "<init>"
                }
            ]
        },
        {
            "name": "java/security/cert/CertificateException",
            "properties": [],
            "method": [
                {
                    "name": "<init>"
                },
                {
                    "name": "<init>"
                }
            ]
        },
        {
            "name": "java/security/cert/X509Certificate",
            "properties": [],
            "method": [
                {
                    "name": "getSubjectX500Principal"
                },
                {
                    "name": "getIssuerX500Principal"
                },
                {
                    "name": "getPublicKey"
                },
                {
                    "name": "verify"
                }
            ]
        },
        {
            "name": "javax/security/auth/x500/X500Principal",
            "properties": [],
            "method": [
                {
                    "name": "equals"
                },
                {
                    "name": "<init>"
                }
            ]
        },
        {
            "name": "java/io/BufferedOutputStream",
            "properties": [],
            "method": [
                {
                    "name": "<init>"
                },
                {
                    "name": "write"
                },
                {
                    "name": "<init>"
                }
            ]
        },
        {
            "name": "java/nio/CharBuffer",
            "properties": [],
            "method": [
                {
                    "name": "wrap"
                },
                {
                    "name": "wrap"
                },
                {
                    "name": "allocate"
                },
                {
                    "name": "rewind"
                }
            ]
        },
        {
            "name": "java/nio/charset/CharsetEncoder",
            "properties": [],
            "method": [
                {
                    "name": "encode"
                },
                {
                    "name": "charset"
                }
            ]
        },
        {
            "name": "java/net/Proxy",
            "properties": [],
            "method": [
                {
                    "name": "<init>"
                }
            ]
        },
        {
            "name": "java/net/InetSocketAddress",
            "properties": [],
            "method": [
                {
                    "name": "<init>"
                }
            ]
        },
        {
            "name": "java/io/BufferedInputStream",
            "properties": [],
            "method": [
                {
                    "name": "<init>"
                },
                {
                    "name": "<init>"
                },
                {
                    "name": "close"
                }
            ]
        },
        {
            "name": "java/util/zip/GZIPInputStream",
            "properties": [],
            "method": [
                {
                    "name": "<init>"
                },
                {
                    "name": "read"
                },
                {
                    "name": "close"
                }
            ]
        },
        {
            "name": "javax/net/ssl/SSLContext",
            "properties": [],
            "method": [
                {
                    "name": "getInstance"
                },
                {
                    "name": "init"
                },
                {
                    "name": "getSocketFactory"
                }
            ]
        },
        {
            "name": "javax/net/ssl/X509TrustManager",
            "properties": [],
            "method": [
                {
                    "name": "checkServerTrusted"
                }
            ]
        },
        {
            "name": "javax/net/ssl/TrustManagerFactory",
            "properties": [],
            "method": [
                {
                    "name": "getInstance"
                },
                {
                    "name": "init"
                },
                {
                    "name": "getTrustManagers"
                }
            ]
        },
        {
            "name": "java/security/KeyStore",
            "properties": [],
            "method": [
                {
                    "name": "getInstance"
                },
                {
                    "name": "load"
                },
                {
                    "name": "aliases"
                },
                {
                    "name": "getCertificate"
                }
            ]
        },
        {
            "name": "java/io/UnsupportedEncodingException",
            "properties": [],
            "method": [
                {
                    "name": "getMessage"
                }
            ]
        },
        {
            "name": "java/lang/Process",
            "properties": [],
            "method": [
                {
                    "name": "<init>"
                },
                {
                    "name": "getInputStream"
                },
                {
                    "name": "getErrorStream"
                },
                {
                    "name": "getOutputStream"
                },
                {
                    "name": "destroyForcibly"
                },
                {
                    "name": "destroy"
                },
                {
                    "name": "waitFor"
                },
                {
                    "name": "exitValue"
                }
            ]
        },
        {
            "name": "java/lang/ReflectiveOperationException",
            "properties": [],
            "method": [
                {
                    "name": "printStackTrace"
                }
            ]
        },
        {
            "name": "java/io/DataInputStream",
            "properties": [],
            "method": [
                {
                    "name": "<init>"
                },
                {
                    "name": "readBoolean"
                },
                {
                    "name": "readInt"
                },
                {
                    "name": "readFully"
                },
                {
                    "name": "readDouble"
                },
                {
                    "name": "skip"
                },
                {
                    "name": "readFloat"
                },
                {
                    "name": "readLong"
                },
                {
                    "name": "readUTF"
                },
                {
                    "name": "read"
                }
            ]
        },
        {
            "name": "java/util/concurrent/ConcurrentSkipListMap",
            "properties": [],
            "method": [
                {
                    "name": "<init>"
                },
                {
                    "name": "values"
                },
                {
                    "name": "put"
                }
            ]
        },
        {
            "name": "java/util/NavigableMap",
            "properties": [],
            "method": [
                {
                    "name": "get"
                },
                {
                    "name": "remove"
                },
                {
                    "name": "put"
                },
                {
                    "name": "ceilingKey"
                },
                {
                    "name": "keySet"
                }
            ]
        },
        {
            "name": "org/json/JSONException",
            "properties": [],
            "method": [
                {
                    "name": "getMessage"
                }
            ]
        },
        {
            "name": "java/util/AbstractList",
            "properties": [],
            "method": [
                {
                    "name": "<init>"
                },
                {
                    "name": "add"
                },
                {
                    "name": "add"
                },
                {
                    "name": "addAll"
                },
                {
                    "name": "addAll"
                },
                {
                    "name": "clear"
                },
                {
                    "name": "equals"
                },
                {
                    "name": "remove"
                },
                {
                    "name": "remove"
                },
                {
                    "name": "removeAll"
                },
                {
                    "name": "retainAll"
                },
                {
                    "name": "set"
                }
            ]
        },
        {
            "name": "java/lang/Byte",
            "properties": [],
            "method": [
                {
                    "name": "valueOf"
                },
                {
                    "name": "byteValue"
                }
            ]
        },
        {
            "name": "java/nio/channels/FileLock",
            "properties": [],
            "method": [
                {
                    "name": "isValid"
                }
            ]
        },
        {
            "name": "java/lang/NoSuchMethodException",
            "properties": [],
            "method": [
                {
                    "name": "getMessage"
                },
                {
                    "name": "initCause"
                }
            ]
        },
        {
            "name": "java/io/FileWriter",
            "properties": [],
            "method": [
                {
                    "name": "<init>"
                },
                {
                    "name": "write"
                },
                {
                    "name": "flush"
                }
            ]
        },
        {
            "name": "java/util/Currency",
            "properties": [],
            "method": [
                {
                    "name": "getCurrencyCode"
                }
            ]
        },
        {
            "name": "java/lang/OutOfMemoryError",
            "properties": [],
            "method": [
                {
                    "name": "<init>"
                }
            ]
        },
        {
            "name": "java/lang/Short",
            "properties": [],
            "method": [
                {
                    "name": "shortValue"
                }
            ]
        },
        {
            "name": "java/security/cert/CertificateFactory",
            "properties": [],
            "method": [
                {
                    "name": "getInstance"
                },
                {
                    "name": "generateCertificate"
                }
            ]
        },
        {
            "name": "java/util/concurrent/CopyOnWriteArraySet",
            "properties": [],
            "method": [
                {
                    "name": "<init>"
                }
            ]
        }
    ],
    "Associations": [
        {
            "from": "moe/shizuku/api/RemoteProcess;",
            "to": "moe/shizuku/server/IRemoteProcess;",
            "type": "dependency"
        },
        {
            "from": "moe/shizuku/api/RemoteProcess;",
            "to": "java/util/concurrent/TimeUnit;",
            "type": "dependency"
        },
        {
            "from": "moe/shizuku/api/ShizukuBinderReceiveProvider;",
            "to": "java/lang/IllegalStateException;",
            "type": "dependency"
        },
        {
            "from": "moe/shizuku/api/ShizukuBinderReceiveProvider;",
            "to": "moe/shizuku/api/ShizukuService;",
            "type": "dependency"
        },
        {
            "from": "moe/shizuku/api/ShizukuBinderReceiveProvider;",
            "to": "moe/shizuku/api/BinderContainer;",
            "type": "dependency"
        },
        {
            "from": "moe/shizuku/api/ShizukuBinderReceiveProvider;",
            "to": "java/lang/String;",
            "type": "dependency"
        },
        {
            "from": "moe/shizuku/api/ShizukuBinderReceiveProvider;",
            "to": "moe/shizuku/api/ShizukuClientHelper;",
            "type": "dependency"
        },
        {
            "from": "moe/shizuku/api/ShizukuBinderReceiveProvider;",
            "to": "java/lang/Class;",
            "type": "dependency"
        },
        {
            "from": "moe/shizuku/api/ShizukuBinderWrapper;",
            "to": "java/lang/IllegalStateException;",
            "type": "dependency"
        },
        {
            "from": "moe/shizuku/api/ShizukuBinderWrapper;",
            "to": "java/lang/Class;",
            "type": "dependency"
        },
        {
            "from": "moe/shizuku/api/ShizukuBinderWrapper;",
            "to": "moe/shizuku/api/ShizukuService;",
            "type": "dependency"
        },
        {
            "from": "moe/shizuku/api/ShizukuClientHelper;",
            "to": "java/util/UUID;",
            "type": "dependency"
        },
        {
            "from": "moe/shizuku/api/ShizukuMultiProcessHelper;",
            "to": "moe/shizuku/api/ShizukuBinderReceiveProvider;",
            "type": "dependency"
        },
        {
            "from": "moe/shizuku/api/ShizukuMultiProcessHelper;",
            "to": "moe/shizuku/api/ShizukuService;",
            "type": "dependency"
        },
        {
            "from": "moe/shizuku/api/ShizukuMultiProcessHelper;",
            "to": "java/lang/StringBuilder;",
            "type": "dependency"
        },
        {
            "from": "moe/shizuku/api/ShizukuMultiProcessHelper;",
            "to": "java/lang/Class;",
            "type": "dependency"
        },
        {
            "from": "moe/shizuku/api/ShizukuMultiProcessHelper;",
            "to": "moe/shizuku/api/ShizukuClientHelper;",
            "type": "dependency"
        },
        {
            "from": "moe/shizuku/api/ShizukuService;",
            "to": "moe/shizuku/server/IShizukuService;",
            "type": "dependency"
        },
        {
            "from": "moe/shizuku/api/ShizukuService;",
            "to": "java/lang/IllegalStateException;",
            "type": "dependency"
        },
        {
            "from": "moe/shizuku/api/ShizukuService;",
            "to": "moe/shizuku/api/RemoteProcess;",
            "type": "dependency"
        },
        {
            "from": "moe/shizuku/api/SystemServiceHelper;",
            "to": "java/util/Map;",
            "type": "dependency"
        },
        {
            "from": "moe/shizuku/api/SystemServiceHelper;",
            "to": "java/lang/reflect/Field;",
            "type": "dependency"
        },
        {
            "from": "moe/shizuku/api/SystemServiceHelper;",
            "to": "java/lang/String;",
            "type": "dependency"
        },
        {
            "from": "moe/shizuku/api/SystemServiceHelper;",
            "to": "java/lang/StringBuilder;",
            "type": "dependency"
        },
        {
            "from": "moe/shizuku/api/SystemServiceHelper;",
            "to": "java/lang/Integer;",
            "type": "dependency"
        },
        {
            "from": "moe/shizuku/api/SystemServiceHelper;",
            "to": "java/lang/Class;",
            "type": "dependency"
        },
        {
            "from": "moe/shizuku/api/SystemServiceHelper;",
            "to": "java/lang/ReflectiveOperationException;",
            "type": "dependency"
        },
        {
            "from": "moe/shizuku/api/BinderContainer",
            "to": "java/lang/Object;",
            "type": "extend"
        },
        {
            "from": "moe/shizuku/api/BuildConfig",
            "to": "java/lang/Object;",
            "type": "extend"
        },
        {
            "from": "moe/shizuku/api/R",
            "to": "java/lang/Object;",
            "type": "extend"
        },
        {
            "from": "moe/shizuku/api/RemoteProcess",
            "to": "java/lang/Object;",
            "type": "extend"
        },
        {
            "from": "moe/shizuku/api/ShizukuApiConstants",
            "to": "java/lang/Object;",
            "type": "extend"
        },
        {
            "from": "moe/shizuku/api/ShizukuBinderReceiveProvider",
            "to": "java/lang/Object;",
            "type": "extend"
        },
        {
            "from": "moe/shizuku/api/ShizukuBinderWrapper",
            "to": "java/lang/Object;",
            "type": "extend"
        },
        {
            "from": "moe/shizuku/api/ShizukuClientHelper",
            "to": "java/lang/Object;",
            "type": "extend"
        },
        {
            "from": "moe/shizuku/api/ShizukuMultiProcessHelper",
            "to": "java/lang/Object;",
            "type": "extend"
        },
        {
            "from": "moe/shizuku/api/ShizukuService",
            "to": "java/lang/Object;",
            "type": "extend"
        },
        {
            "from": "moe/shizuku/api/SystemServiceHelper",
            "to": "java/lang/Object;",
            "type": "extend"
        },
        {
            "from": "moe/shizuku/server/IRemoteProcess",
            "to": "java/lang/Object;",
            "type": "extend"
        },
        {
            "from": "moe/shizuku/server/IShizukuService",
            "to": "java/lang/Object;",
            "type": "extend"
        },
        {
            "from": "java/lang/Object",
            "to": "java/lang/Object;",
            "type": "extend"
        },
        {
            "from": "java/util/concurrent/CopyOnWriteArrayList",
            "to": "java/lang/Object;",
            "type": "extend"
        },
        {
            "from": "java/util/Iterator",
            "to": "java/lang/Object;",
            "type": "extend"
        },
        {
            "from": "java/util/ArrayDeque",
            "to": "java/lang/Object;",
            "type": "extend"
        },
        {
            "from": "java/lang/Runnable",
            "to": "java/lang/Object;",
            "type": "extend"
        },
        {
            "from": "java/lang/Enum",
            "to": "java/lang/Object;",
            "type": "extend"
        },
        {
            "from": "java/lang/UnsupportedOperationException",
            "to": "java/lang/Object;",
            "type": "extend"
        },
        {
            "from": "java/lang/Class",
            "to": "java/lang/Object;",
            "type": "extend"
        },
        {
            "from": "java/lang/Integer",
            "to": "java/lang/Object;",
            "type": "extend"
        },
        {
            "from": "java/lang/reflect/Method",
            "to": "java/lang/Object;",
            "type": "extend"
        },
        {
            "from": "java/lang/ref/WeakReference",
            "to": "java/lang/Object;",
            "type": "extend"
        },
        {
            "from": "java/lang/IllegalArgumentException",
            "to": "java/lang/Object;",
            "type": "extend"
        },
        {
            "from": "java/lang/Throwable",
            "to": "java/lang/Object;",
            "type": "extend"
        },
        {
            "from": "java/lang/String",
            "to": "java/lang/Object;",
            "type": "extend"
        },
        {
            "from": "java/lang/StringBuilder",
            "to": "java/lang/Object;",
            "type": "extend"
        },
        {
            "from": "java/lang/IllegalStateException",
            "to": "java/lang/Object;",
            "type": "extend"
        },
        {
            "from": "java/util/Map",
            "to": "java/lang/Object;",
            "type": "extend"
        },
        {
            "from": "java/lang/reflect/Constructor",
            "to": "java/lang/Object;",
            "type": "extend"
        },
        {
            "from": "java/lang/reflect/Field",
            "to": "java/lang/Object;",
            "type": "extend"
        },
        {
            "from": "java/lang/Math",
            "to": "java/lang/Object;",
            "type": "extend"
        },
        {
            "from": "java/lang/System",
            "to": "java/lang/Object;",
            "type": "extend"
        },
        {
            "from": "java/util/Calendar",
            "to": "java/lang/Object;",
            "type": "extend"
        },
        {
            "from": "java/lang/ThreadLocal",
            "to": "java/lang/Object;",
            "type": "extend"
        },
        {
            "from": "java/util/WeakHashMap",
            "to": "java/lang/Object;",
            "type": "extend"
        },
        {
            "from": "java/lang/CharSequence",
            "to": "java/lang/Object;",
            "type": "extend"
        },
        {
            "from": "java/lang/Boolean",
            "to": "java/lang/Object;",
            "type": "extend"
        },
        {
            "from": "java/lang/RuntimeException",
            "to": "java/lang/Object;",
            "type": "extend"
        },
        {
            "from": "org/xmlpull/v1/XmlPullParser",
            "to": "java/lang/Object;",
            "type": "extend"
        },
        {
            "from": "java/util/ArrayList",
            "to": "java/lang/Object;",
            "type": "extend"
        },
        {
            "from": "java/util/Set",
            "to": "java/lang/Object;",
            "type": "extend"
        },
        {
            "from": "java/util/List",
            "to": "java/lang/Object;",
            "type": "extend"
        },
        {
            "from": "java/lang/Float",
            "to": "java/lang/Enum;",
            "type": "extend"
        },
        {
            "from": "java/math/BigDecimal",
            "to": "java/lang/Object;",
            "type": "extend"
        },
        {
            "from": "org/xmlpull/v1/XmlSerializer",
            "to": "java/lang/Object;",
            "type": "extend"
        },
        {
            "from": "java/io/FileOutputStream",
            "to": "java/lang/Object;",
            "type": "extend"
        },
        {
            "from": "java/util/HashMap",
            "to": "java/lang/Object;",
            "type": "extend"
        },
        {
            "from": "java/io/FileInputStream",
            "to": "java/lang/Object;",
            "type": "extend"
        },
        {
            "from": "java/lang/Long",
            "to": "java/lang/Object;",
            "type": "extend"
        },
        {
            "from": "org/xmlpull/v1/XmlPullParserException",
            "to": "java/lang/Object;",
            "type": "extend"
        },
        {
            "from": "java/util/Collections",
            "to": "java/lang/Object;",
            "type": "extend"
        },
        {
            "from": "java/util/Locale",
            "to": "java/lang/Object;",
            "type": "extend"
        },
        {
            "from": "java/util/concurrent/ConcurrentHashMap",
            "to": "java/lang/Object;",
            "type": "extend"
        },
        {
            "from": "java/util/Arrays",
            "to": "java/lang/Object;",
            "type": "extend"
        },
        {
            "from": "java/lang/NoSuchFieldException",
            "to": "java/lang/Object;",
            "type": "extend"
        },
        {
            "from": "java/lang/IllegalAccessException",
            "to": "java/lang/Object;",
            "type": "extend"
        },
        {
            "from": "java/util/concurrent/atomic/AtomicInteger",
            "to": "java/lang/Object;",
            "type": "extend"
        },
        {
            "from": "java/lang/Thread",
            "to": "java/lang/Object;",
            "type": "extend"
        },
        {
            "from": "java/util/Collection",
            "to": "java/lang/Object;",
            "type": "extend"
        },
        {
            "from": "java/lang/reflect/Array",
            "to": "java/lang/Object;",
            "type": "extend"
        },
        {
            "from": "java/lang/ArrayIndexOutOfBoundsException",
            "to": "java/lang/Object;",
            "type": "extend"
        },
        {
            "from": "J",
            "to": "java/lang/Object;",
            "type": "extend"
        },
        {
            "from": "Ljava/lang/Object",
            "to": "java/lang/Object;",
            "type": "extend"
        },
        {
            "from": "java/lang/AssertionError",
            "to": "java/lang/Object;",
            "type": "extend"
        },
        {
            "from": "java/util/LinkedHashMap",
            "to": "java/lang/Enum;",
            "type": "extend"
        },
        {
            "from": "java/lang/NullPointerException",
            "to": "java/lang/Object;",
            "type": "extend"
        },
        {
            "from": "java/util/NoSuchElementException",
            "to": "java/lang/Object;",
            "type": "extend"
        },
        {
            "from": "java/util/ConcurrentModificationException",
            "to": "java/lang/Object;",
            "type": "extend"
        },
        {
            "from": "I",
            "to": "java/lang/Object;",
            "type": "extend"
        },
        {
            "from": "java/util/HashSet",
            "to": "java/lang/Object;",
            "type": "extend"
        },
        {
            "from": "java/text/NumberFormat",
            "to": "java/lang/Object;",
            "type": "extend"
        },
        {
            "from": "java/lang/SecurityException",
            "to": "java/lang/Object;",
            "type": "extend"
        },
        {
            "from": "java/lang/IndexOutOfBoundsException",
            "to": "java/lang/Object;",
            "type": "extend"
        },
        {
            "from": "java/util/concurrent/RejectedExecutionException",
            "to": "java/lang/Object;",
            "type": "extend"
        },
        {
            "from": "java/io/File",
            "to": "java/lang/Object;",
            "type": "extend"
        },
        {
            "from": "java/util/Objects",
            "to": "java/lang/Object;",
            "type": "extend"
        },
        {
            "from": "java/lang/Character",
            "to": "java/lang/Object;",
            "type": "extend"
        },
        {
            "from": "java/lang/Number",
            "to": "java/lang/Object;",
            "type": "extend"
        },
        {
            "from": "java/io/Closeable",
            "to": "java/lang/Object;",
            "type": "extend"
        },
        {
            "from": "java/io/InputStream",
            "to": "java/lang/Object;",
            "type": "extend"
        },
        {
            "from": "java/io/IOException",
            "to": "java/lang/Object;",
            "type": "extend"
        },
        {
            "from": "java/nio/channels/FileChannel",
            "to": "java/lang/Object;",
            "type": "extend"
        },
        {
            "from": "java/net/SocketImpl",
            "to": "java/lang/Object;",
            "type": "extend"
        },
        {
            "from": "java/net/DatagramSocket",
            "to": "java/lang/Object;",
            "type": "extend"
        },
        {
            "from": "java/net/Socket",
            "to": "java/lang/Object;",
            "type": "extend"
        },
        {
            "from": "java/lang/reflect/InvocationTargetException",
            "to": "java/lang/Object;",
            "type": "extend"
        },
        {
            "from": "java/util/concurrent/Callable",
            "to": "java/lang/Object;",
            "type": "extend"
        },
        {
            "from": "java/util/concurrent/atomic/AtomicReference",
            "to": "java/lang/Object;",
            "type": "extend"
        },
        {
            "from": "java/util/concurrent/locks/ReentrantLock",
            "to": "java/lang/Object;",
            "type": "extend"
        },
        {
            "from": "java/util/concurrent/atomic/AtomicBoolean",
            "to": "java/lang/Object;",
            "type": "extend"
        },
        {
            "from": "java/util/concurrent/locks/Condition",
            "to": "java/lang/Object;",
            "type": "extend"
        },
        {
            "from": "java/util/concurrent/TimeUnit",
            "to": "android/view/ViewGroup$MarginLayoutParams;",
            "type": "extend"
        },
        {
            "from": "java/lang/InterruptedException",
            "to": "java/lang/Object;",
            "type": "extend"
        },
        {
            "from": "java/util/concurrent/FutureTask",
            "to": "java/lang/Object;",
            "type": "extend"
        },
        {
            "from": "java/util/concurrent/Executors",
            "to": "java/lang/Object;",
            "type": "extend"
        },
        {
            "from": "java/util/concurrent/Executor",
            "to": "java/lang/Object;",
            "type": "extend"
        },
        {
            "from": "java/util/regex/Pattern",
            "to": "java/lang/Object;",
            "type": "extend"
        },
        {
            "from": "java/util/regex/MatchResult",
            "to": "java/lang/Object;",
            "type": "extend"
        },
        {
            "from": "java/util/regex/Matcher",
            "to": "java/lang/Object;",
            "type": "extend"
        },
        {
            "from": "java/net/URLEncoder",
            "to": "java/lang/Object;",
            "type": "extend"
        },
        {
            "from": "java/io/FileDescriptor",
            "to": "java/lang/Object;",
            "type": "extend"
        },
        {
            "from": "java/io/Writer",
            "to": "java/lang/Object;",
            "type": "extend"
        },
        {
            "from": "java/io/PrintWriter",
            "to": "java/lang/Object;",
            "type": "extend"
        },
        {
            "from": "java/lang/AutoCloseable",
            "to": "java/lang/Object;",
            "type": "extend"
        },
        {
            "from": "java/lang/reflect/Modifier",
            "to": "java/lang/Object;",
            "type": "extend"
        },
        {
            "from": "java/lang/Package",
            "to": "java/lang/Object;",
            "type": "extend"
        },
        {
            "from": "java/util/concurrent/ExecutionException",
            "to": "java/lang/Object;",
            "type": "extend"
        },
        {
            "from": "java/util/concurrent/LinkedBlockingQueue",
            "to": "android/widget/ArrayAdapter;",
            "type": "extend"
        },
        {
            "from": "java/util/concurrent/ThreadPoolExecutor",
            "to": "android/widget/CursorAdapter;",
            "type": "extend"
        },
        {
            "from": "F",
            "to": "java/lang/Object;",
            "type": "extend"
        },
        {
            "from": "java/util/StringTokenizer",
            "to": "java/lang/Object;",
            "type": "extend"
        },
        {
            "from": "java/io/ObjectInputStream",
            "to": "java/lang/Object;",
            "type": "extend"
        },
        {
            "from": "java/io/ObjectStreamClass",
            "to": "java/lang/Object;",
            "type": "extend"
        },
        {
            "from": "java/io/ByteArrayOutputStream",
            "to": "android/os/Handler;",
            "type": "extend"
        },
        {
            "from": "java/io/ObjectOutputStream",
            "to": "android/widget/ArrayAdapter;",
            "type": "extend"
        },
        {
            "from": "java/io/ByteArrayInputStream",
            "to": "android/widget/ListView;",
            "type": "extend"
        },
        {
            "from": "java/lang/Exception",
            "to": "java/lang/Object;",
            "type": "extend"
        },
        {
            "from": "java/io/FilterInputStream",
            "to": "java/lang/Object;",
            "type": "extend"
        },
        {
            "from": "java/io/DataOutputStream",
            "to": "java/lang/Object;",
            "type": "extend"
        },
        {
            "from": "",
            "to": "java/lang/Object;",
            "type": "extend"
        },
        {
            "from": "java/util/zip/ZipInputStream",
            "to": "java/lang/Object;",
            "type": "extend"
        },
        {
            "from": "java/security/MessageDigest",
            "to": "java/lang/Object;",
            "type": "extend"
        },
        {
            "from": "java/util/zip/ZipEntry",
            "to": "java/lang/Object;",
            "type": "extend"
        },
        {
            "from": "java/security/DigestInputStream",
            "to": "java/lang/Object;",
            "type": "extend"
        },
        {
            "from": "java/io/PipedOutputStream",
            "to": "android/content/BroadcastReceiver;",
            "type": "extend"
        },
        {
            "from": "java/io/PipedInputStream",
            "to": "java/lang/Object;",
            "type": "extend"
        },
        {
            "from": "java/io/OutputStream",
            "to": "java/lang/Object;",
            "type": "extend"
        },
        {
            "from": "java/security/spec/PKCS8EncodedKeySpec",
            "to": "java/lang/Object;",
            "type": "extend"
        },
        {
            "from": "java/security/KeyFactory",
            "to": "java/lang/Object;",
            "type": "extend"
        },
        {
            "from": "java/security/Signature",
            "to": "java/lang/Object;",
            "type": "extend"
        },
        {
            "from": "java/util/zip/ZipOutputStream",
            "to": "java/lang/Object;",
            "type": "extend"
        },
        {
            "from": "java/util/Random",
            "to": "java/lang/Object;",
            "type": "extend"
        },
        {
            "from": "java/util/concurrent/ExecutorService",
            "to": "java/lang/Object;",
            "type": "extend"
        },
        {
            "from": "java/util/zip/CRC32",
            "to": "java/lang/Object;",
            "type": "extend"
        },
        {
            "from": "java/io/BufferedReader",
            "to": "java/lang/Object;",
            "type": "extend"
        },
        {
            "from": "java/io/InputStreamReader",
            "to": "java/lang/Object;",
            "type": "extend"
        },
        {
            "from": "java/text/DecimalFormat",
            "to": "java/lang/Object;",
            "type": "extend"
        },
        {
            "from": "java/text/DecimalFormatSymbols",
            "to": "java/lang/Object;",
            "type": "extend"
        },
        {
            "from": "java/io/StringWriter",
            "to": "java/lang/Object;",
            "type": "extend"
        },
        {
            "from": "B",
            "to": "java/lang/Object;",
            "type": "extend"
        },
        {
            "from": "java/nio/ByteBuffer",
            "to": "java/lang/Object;",
            "type": "extend"
        },
        {
            "from": "java/net/URL",
            "to": "java/lang/Object;",
            "type": "extend"
        },
        {
            "from": "java/util/Queue",
            "to": "java/lang/Object;",
            "type": "extend"
        },
        {
            "from": "java/io/OutputStreamWriter",
            "to": "java/lang/Object;",
            "type": "extend"
        },
        {
            "from": "java/io/PrintStream",
            "to": "android/graphics/drawable/Drawable$ConstantState;",
            "type": "extend"
        },
        {
            "from": "java/io/BufferedWriter",
            "to": "android/graphics/drawable/Drawable;",
            "type": "extend"
        },
        {
            "from": "java/nio/charset/Charset",
            "to": "android/graphics/drawable/Drawable;",
            "type": "extend"
        },
        {
            "from": "java/io/EOFException",
            "to": "java/lang/Object;",
            "type": "extend"
        },
        {
            "from": "java/io/Reader",
            "to": "android/graphics/drawable/Drawable;",
            "type": "extend"
        },
        {
            "from": "java/io/FileNotFoundException",
            "to": "java/lang/Object;",
            "type": "extend"
        },
        {
            "from": "java/lang/ref/ReferenceQueue",
            "to": "java/lang/Object;",
            "type": "extend"
        },
        {
            "from": "java/lang/Appendable",
            "to": "java/lang/Object;",
            "type": "extend"
        },
        {
            "from": "java/util/TreeMap",
            "to": "java/lang/Object;",
            "type": "extend"
        },
        {
            "from": "java/util/concurrent/locks/Lock",
            "to": "java/lang/Object;",
            "type": "extend"
        },
        {
            "from": "java/util/concurrent/PriorityBlockingQueue",
            "to": "java/lang/Object;",
            "type": "extend"
        },
        {
            "from": "java/util/concurrent/SynchronousQueue",
            "to": "java/lang/Object;",
            "type": "extend"
        },
        {
            "from": "java/lang/Runtime",
            "to": "java/lang/Object;",
            "type": "extend"
        },
        {
            "from": "java/util/EnumSet",
            "to": "java/lang/Object;",
            "type": "extend"
        },
        {
            "from": "java/lang/Double",
            "to": "java/lang/Object;",
            "type": "extend"
        },
        {
            "from": "java/util/UUID",
            "to": "java/lang/Object;",
            "type": "extend"
        },
        {
            "from": "java/util/concurrent/ConcurrentMap",
            "to": "java/lang/Object;",
            "type": "extend"
        },
        {
            "from": "java/io/RandomAccessFile",
            "to": "java/lang/Object;",
            "type": "extend"
        },
        {
            "from": "java/nio/MappedByteBuffer",
            "to": "java/lang/Object;",
            "type": "extend"
        },
        {
            "from": "org/json/JSONObject",
            "to": "java/lang/Object;",
            "type": "extend"
        },
        {
            "from": "java/util/concurrent/ScheduledExecutorService",
            "to": "java/lang/Object;",
            "type": "extend"
        },
        {
            "from": "java/util/concurrent/ScheduledFuture",
            "to": "android/content/ContextWrapper;",
            "type": "extend"
        },
        {
            "from": "org/json/JSONArray",
            "to": "android/view/ActionMode;",
            "type": "extend"
        },
        {
            "from": "java/io/FilterOutputStream",
            "to": "java/lang/Object;",
            "type": "extend"
        },
        {
            "from": "java/util/concurrent/atomic/AtomicLong",
            "to": "java/lang/Object;",
            "type": "extend"
        },
        {
            "from": "java/util/Date",
            "to": "android/view/MenuInflater;",
            "type": "extend"
        },
        {
            "from": "java/util/concurrent/CountDownLatch",
            "to": "java/lang/Object;",
            "type": "extend"
        },
        {
            "from": "java/util/concurrent/Future",
            "to": "java/lang/Object;",
            "type": "extend"
        },
        {
            "from": "java/util/TreeSet",
            "to": "java/lang/Object;",
            "type": "extend"
        },
        {
            "from": "java/io/FilenameFilter",
            "to": "java/lang/Object;",
            "type": "extend"
        },
        {
            "from": "java/util/zip/GZIPOutputStream",
            "to": "java/lang/Object;",
            "type": "extend"
        },
        {
            "from": "java/util/LinkedList",
            "to": "java/lang/Object;",
            "type": "extend"
        },
        {
            "from": "java/lang/reflect/Proxy",
            "to": "java/lang/Object;",
            "type": "extend"
        },
        {
            "from": "java/io/FileReader",
            "to": "java/lang/Object;",
            "type": "extend"
        },
        {
            "from": "java/lang/StackTraceElement",
            "to": "java/lang/Object;",
            "type": "extend"
        },
        {
            "from": "java/text/SimpleDateFormat",
            "to": "android/widget/BaseAdapter;",
            "type": "extend"
        },
        {
            "from": "java/net/HttpURLConnection",
            "to": "android/widget/BaseAdapter;",
            "type": "extend"
        },
        {
            "from": "java/util/concurrent/BlockingQueue",
            "to": "java/lang/Object;",
            "type": "extend"
        },
        {
            "from": "java/util/concurrent/TimeoutException",
            "to": "java/lang/Object;",
            "type": "extend"
        },
        {
            "from": "java/lang/Iterable",
            "to": "java/lang/Object;",
            "type": "extend"
        },
        {
            "from": "java/lang/NumberFormatException",
            "to": "java/lang/Object;",
            "type": "extend"
        },
        {
            "from": "java/util/Properties",
            "to": "java/lang/Object;",
            "type": "extend"
        },
        {
            "from": "java/math/BigInteger",
            "to": "java/lang/Object;",
            "type": "extend"
        },
        {
            "from": "java/util/Stack",
            "to": "java/lang/Object;",
            "type": "extend"
        },
        {
            "from": "java/net/URLDecoder",
            "to": "java/lang/Object;",
            "type": "extend"
        },
        {
            "from": "java/net/URI",
            "to": "java/lang/Object;",
            "type": "extend"
        },
        {
            "from": "java/util/Scanner",
            "to": "java/lang/Object;",
            "type": "extend"
        },
        {
            "from": "java/lang/StringBuffer",
            "to": "java/lang/Object;",
            "type": "extend"
        },
        {
            "from": "java/util/concurrent/ThreadFactory",
            "to": "java/lang/Object;",
            "type": "extend"
        },
        {
            "from": "java/lang/ClassLoader",
            "to": "java/lang/Object;",
            "type": "extend"
        },
        {
            "from": "dalvik/system/PathClassLoader",
            "to": "java/lang/Object;",
            "type": "extend"
        },
        {
            "from": "java/lang/NoSuchMethodError",
            "to": "android/view/ViewGroup;",
            "type": "extend"
        },
        {
            "from": "java/util/Vector",
            "to": "android/graphics/drawable/Drawable;",
            "type": "extend"
        },
        {
            "from": "java/util/logging/Logger",
            "to": "android/widget/FrameLayout;",
            "type": "extend"
        },
        {
            "from": "java/util/ServiceLoader",
            "to": "java/lang/Object;",
            "type": "extend"
        },
        {
            "from": "java/lang/Void",
            "to": "android/animation/AnimatorListenerAdapter;",
            "type": "extend"
        },
        {
            "from": "java/lang/Deprecated",
            "to": "java/lang/Object;",
            "type": "extend"
        },
        {
            "from": "java/util/AbstractMap",
            "to": "java/lang/Object;",
            "type": "extend"
        },
        {
            "from": "java/lang/Comparable",
            "to": "java/lang/Object;",
            "type": "extend"
        },
        {
            "from": "java/util/SortedMap",
            "to": "android/view/ViewGroup$MarginLayoutParams;",
            "type": "extend"
        },
        {
            "from": "java/util/AbstractSet",
            "to": "java/lang/Object;",
            "type": "extend"
        },
        {
            "from": "java/util/ListIterator",
            "to": "java/lang/Object;",
            "type": "extend"
        },
        {
            "from": "sun/misc/Unsafe",
            "to": "java/lang/Object;",
            "type": "extend"
        },
        {
            "from": "D",
            "to": "java/lang/Object;",
            "type": "extend"
        },
        {
            "from": "Z",
            "to": "java/lang/Object;",
            "type": "extend"
        },
        {
            "from": "java/nio/ByteOrder",
            "to": "java/lang/Object;",
            "type": "extend"
        },
        {
            "from": "java/security/AccessController",
            "to": "java/lang/Object;",
            "type": "extend"
        },
        {
            "from": "java/nio/Buffer",
            "to": "java/lang/Object;",
            "type": "extend"
        },
        {
            "from": "java/security/SecureRandom",
            "to": "java/lang/Object;",
            "type": "extend"
        },
        {
            "from": "java/util/concurrent/Semaphore",
            "to": "java/lang/Object;",
            "type": "extend"
        },
        {
            "from": "javax/net/ssl/SSLSocket",
            "to": "android/os/AsyncTask;",
            "type": "extend"
        },
        {
            "from": "javax/net/ssl/HttpsURLConnection",
            "to": "android/database/DataSetObservable;",
            "type": "extend"
        },
        {
            "from": "javax/net/ssl/SSLSocketFactory",
            "to": "android/database/DataSetObserver;",
            "type": "extend"
        },
        {
            "from": "java/util/BitSet",
            "to": "java/lang/Object;",
            "type": "extend"
        },
        {
            "from": "java/util/concurrent/CancellationException",
            "to": "android/view/View$AccessibilityDelegate;",
            "type": "extend"
        },
        {
            "from": "java/util/LinkedHashSet",
            "to": "android/database/DataSetObserver;",
            "type": "extend"
        },
        {
            "from": "java/text/DateFormat",
            "to": "android/widget/BaseAdapter;",
            "type": "extend"
        },
        {
            "from": "java/util/TimeZone",
            "to": "java/lang/Object;",
            "type": "extend"
        },
        {
            "from": "java/util/concurrent/ArrayBlockingQueue",
            "to": "android/widget/LinearLayout;",
            "type": "extend"
        },
        {
            "from": "java/util/concurrent/ScheduledThreadPoolExecutor",
            "to": "java/lang/Object;",
            "type": "extend"
        },
        {
            "from": "java/security/KeyPairGenerator",
            "to": "android/widget/CheckedTextView;",
            "type": "extend"
        },
        {
            "from": "java/security/KeyPair",
            "to": "java/lang/Object;",
            "type": "extend"
        },
        {
            "from": "java/security/PublicKey",
            "to": "java/lang/Object;",
            "type": "extend"
        },
        {
            "from": "java/security/PrivateKey",
            "to": "java/lang/Object;",
            "type": "extend"
        },
        {
            "from": "java/nio/channels/Channels",
            "to": "java/lang/Object;",
            "type": "extend"
        },
        {
            "from": "java/security/spec/X509EncodedKeySpec",
            "to": "java/lang/Object;",
            "type": "extend"
        },
        {
            "from": "java/util/zip/ZipFile",
            "to": "android/widget/PopupWindow;",
            "type": "extend"
        },
        {
            "from": "java/util/Enumeration",
            "to": "java/lang/Object;",
            "type": "extend"
        },
        {
            "from": "java/security/InvalidKeyException",
            "to": "android/widget/RatingBar;",
            "type": "extend"
        },
        {
            "from": "java/io/Flushable",
            "to": "android/widget/SeekBar;",
            "type": "extend"
        },
        {
            "from": "java/util/concurrent/locks/AbstractQueuedSynchronizer",
            "to": "java/lang/Object;",
            "type": "extend"
        },
        {
            "from": "java/security/cert/CertificateException",
            "to": "java/lang/Object;",
            "type": "extend"
        },
        {
            "from": "java/security/cert/X509Certificate",
            "to": "java/lang/Object;",
            "type": "extend"
        },
        {
            "from": "javax/security/auth/x500/X500Principal",
            "to": "java/lang/Object;",
            "type": "extend"
        },
        {
            "from": "java/io/BufferedOutputStream",
            "to": "java/lang/Object;",
            "type": "extend"
        },
        {
            "from": "java/nio/CharBuffer",
            "to": "java/lang/Object;",
            "type": "extend"
        },
        {
            "from": "java/nio/charset/CharsetEncoder",
            "to": "android/view/View$BaseSavedState;",
            "type": "extend"
        },
        {
            "from": "java/net/Proxy",
            "to": "java/lang/Object;",
            "type": "extend"
        },
        {
            "from": "java/net/InetSocketAddress",
            "to": "java/lang/Object;",
            "type": "extend"
        },
        {
            "from": "java/io/BufferedInputStream",
            "to": "java/lang/Object;",
            "type": "extend"
        },
        {
            "from": "java/util/zip/GZIPInputStream",
            "to": "java/lang/Object;",
            "type": "extend"
        },
        {
            "from": "javax/net/ssl/SSLContext",
            "to": "java/lang/Object;",
            "type": "extend"
        },
        {
            "from": "javax/net/ssl/X509TrustManager",
            "to": "android/widget/ToggleButton;",
            "type": "extend"
        },
        {
            "from": "javax/net/ssl/TrustManagerFactory",
            "to": "android/widget/LinearLayout;",
            "type": "extend"
        },
        {
            "from": "java/security/KeyStore",
            "to": "java/lang/Object;",
            "type": "extend"
        },
        {
            "from": "java/io/UnsupportedEncodingException",
            "to": "android/widget/FrameLayout;",
            "type": "extend"
        },
        {
            "from": "java/lang/Process",
            "to": "java/lang/Object;",
            "type": "extend"
        },
        {
            "from": "java/lang/ReflectiveOperationException",
            "to": "java/lang/Object;",
            "type": "extend"
        },
        {
            "from": "java/io/DataInputStream",
            "to": "java/lang/Object;",
            "type": "extend"
        },
        {
            "from": "java/util/concurrent/ConcurrentSkipListMap",
            "to": "java/lang/Object;",
            "type": "extend"
        },
        {
            "from": "java/util/NavigableMap",
            "to": "android/widget/ListView;",
            "type": "extend"
        },
        {
            "from": "org/json/JSONException",
            "to": "java/lang/Object;",
            "type": "extend"
        },
        {
            "from": "java/util/AbstractList",
            "to": "java/lang/Object;",
            "type": "extend"
        },
        {
            "from": "java/lang/Byte",
            "to": "java/lang/Object;",
            "type": "extend"
        },
        {
            "from": "java/nio/channels/FileLock",
            "to": "java/lang/Object;",
            "type": "extend"
        },
        {
            "from": "java/lang/NoSuchMethodException",
            "to": "java/lang/Object;",
            "type": "extend"
        },
        {
            "from": "java/io/FileWriter",
            "to": "java/lang/Object;",
            "type": "extend"
        },
        {
            "from": "java/util/Currency",
            "to": "android/view/ViewGroup$MarginLayoutParams;",
            "type": "extend"
        },
        {
            "from": "java/lang/OutOfMemoryError",
            "to": "java/lang/Object;",
            "type": "extend"
        },
        {
            "from": "java/lang/Short",
            "to": "android/view/ViewGroup;",
            "type": "extend"
        },
        {
            "from": "java/security/cert/CertificateFactory",
            "to": "java/lang/Object;",
            "type": "extend"
        },
        {
            "from": "java/util/concurrent/CopyOnWriteArraySet",
            "to": "java/lang/Object;",
            "type": "extend"
        }
    ]
}